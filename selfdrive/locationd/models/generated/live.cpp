#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7205501426539971812) {
   out_7205501426539971812[0] = 0;
   out_7205501426539971812[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7205501426539971812[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7205501426539971812[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7205501426539971812[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7205501426539971812[5] = -sin(in_vec[1]);
   out_7205501426539971812[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7205501426539971812[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7205501426539971812[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7205501426539971812[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7205501426539971812[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7205501426539971812[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7205501426539971812[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7205501426539971812[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7205501426539971812[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7205501426539971812[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7205501426539971812[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7205501426539971812[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1555093519000958624) {
   out_1555093519000958624[0] = delta_x[0] + nom_x[0];
   out_1555093519000958624[1] = delta_x[1] + nom_x[1];
   out_1555093519000958624[2] = delta_x[2] + nom_x[2];
   out_1555093519000958624[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1555093519000958624[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1555093519000958624[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1555093519000958624[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1555093519000958624[7] = delta_x[6] + nom_x[7];
   out_1555093519000958624[8] = delta_x[7] + nom_x[8];
   out_1555093519000958624[9] = delta_x[8] + nom_x[9];
   out_1555093519000958624[10] = delta_x[9] + nom_x[10];
   out_1555093519000958624[11] = delta_x[10] + nom_x[11];
   out_1555093519000958624[12] = delta_x[11] + nom_x[12];
   out_1555093519000958624[13] = delta_x[12] + nom_x[13];
   out_1555093519000958624[14] = delta_x[13] + nom_x[14];
   out_1555093519000958624[15] = delta_x[14] + nom_x[15];
   out_1555093519000958624[16] = delta_x[15] + nom_x[16];
   out_1555093519000958624[17] = delta_x[16] + nom_x[17];
   out_1555093519000958624[18] = delta_x[17] + nom_x[18];
   out_1555093519000958624[19] = delta_x[18] + nom_x[19];
   out_1555093519000958624[20] = delta_x[19] + nom_x[20];
   out_1555093519000958624[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1096701756546611417) {
   out_1096701756546611417[0] = -nom_x[0] + true_x[0];
   out_1096701756546611417[1] = -nom_x[1] + true_x[1];
   out_1096701756546611417[2] = -nom_x[2] + true_x[2];
   out_1096701756546611417[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1096701756546611417[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1096701756546611417[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1096701756546611417[6] = -nom_x[7] + true_x[7];
   out_1096701756546611417[7] = -nom_x[8] + true_x[8];
   out_1096701756546611417[8] = -nom_x[9] + true_x[9];
   out_1096701756546611417[9] = -nom_x[10] + true_x[10];
   out_1096701756546611417[10] = -nom_x[11] + true_x[11];
   out_1096701756546611417[11] = -nom_x[12] + true_x[12];
   out_1096701756546611417[12] = -nom_x[13] + true_x[13];
   out_1096701756546611417[13] = -nom_x[14] + true_x[14];
   out_1096701756546611417[14] = -nom_x[15] + true_x[15];
   out_1096701756546611417[15] = -nom_x[16] + true_x[16];
   out_1096701756546611417[16] = -nom_x[17] + true_x[17];
   out_1096701756546611417[17] = -nom_x[18] + true_x[18];
   out_1096701756546611417[18] = -nom_x[19] + true_x[19];
   out_1096701756546611417[19] = -nom_x[20] + true_x[20];
   out_1096701756546611417[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6616296833374728050) {
   out_6616296833374728050[0] = 1.0;
   out_6616296833374728050[1] = 0;
   out_6616296833374728050[2] = 0;
   out_6616296833374728050[3] = 0;
   out_6616296833374728050[4] = 0;
   out_6616296833374728050[5] = 0;
   out_6616296833374728050[6] = 0;
   out_6616296833374728050[7] = 0;
   out_6616296833374728050[8] = 0;
   out_6616296833374728050[9] = 0;
   out_6616296833374728050[10] = 0;
   out_6616296833374728050[11] = 0;
   out_6616296833374728050[12] = 0;
   out_6616296833374728050[13] = 0;
   out_6616296833374728050[14] = 0;
   out_6616296833374728050[15] = 0;
   out_6616296833374728050[16] = 0;
   out_6616296833374728050[17] = 0;
   out_6616296833374728050[18] = 0;
   out_6616296833374728050[19] = 0;
   out_6616296833374728050[20] = 0;
   out_6616296833374728050[21] = 0;
   out_6616296833374728050[22] = 1.0;
   out_6616296833374728050[23] = 0;
   out_6616296833374728050[24] = 0;
   out_6616296833374728050[25] = 0;
   out_6616296833374728050[26] = 0;
   out_6616296833374728050[27] = 0;
   out_6616296833374728050[28] = 0;
   out_6616296833374728050[29] = 0;
   out_6616296833374728050[30] = 0;
   out_6616296833374728050[31] = 0;
   out_6616296833374728050[32] = 0;
   out_6616296833374728050[33] = 0;
   out_6616296833374728050[34] = 0;
   out_6616296833374728050[35] = 0;
   out_6616296833374728050[36] = 0;
   out_6616296833374728050[37] = 0;
   out_6616296833374728050[38] = 0;
   out_6616296833374728050[39] = 0;
   out_6616296833374728050[40] = 0;
   out_6616296833374728050[41] = 0;
   out_6616296833374728050[42] = 0;
   out_6616296833374728050[43] = 0;
   out_6616296833374728050[44] = 1.0;
   out_6616296833374728050[45] = 0;
   out_6616296833374728050[46] = 0;
   out_6616296833374728050[47] = 0;
   out_6616296833374728050[48] = 0;
   out_6616296833374728050[49] = 0;
   out_6616296833374728050[50] = 0;
   out_6616296833374728050[51] = 0;
   out_6616296833374728050[52] = 0;
   out_6616296833374728050[53] = 0;
   out_6616296833374728050[54] = 0;
   out_6616296833374728050[55] = 0;
   out_6616296833374728050[56] = 0;
   out_6616296833374728050[57] = 0;
   out_6616296833374728050[58] = 0;
   out_6616296833374728050[59] = 0;
   out_6616296833374728050[60] = 0;
   out_6616296833374728050[61] = 0;
   out_6616296833374728050[62] = 0;
   out_6616296833374728050[63] = 0;
   out_6616296833374728050[64] = 0;
   out_6616296833374728050[65] = 0;
   out_6616296833374728050[66] = -0.5*state[4];
   out_6616296833374728050[67] = -0.5*state[5];
   out_6616296833374728050[68] = -0.5*state[6];
   out_6616296833374728050[69] = 0;
   out_6616296833374728050[70] = 0;
   out_6616296833374728050[71] = 0;
   out_6616296833374728050[72] = 0;
   out_6616296833374728050[73] = 0;
   out_6616296833374728050[74] = 0;
   out_6616296833374728050[75] = 0;
   out_6616296833374728050[76] = 0;
   out_6616296833374728050[77] = 0;
   out_6616296833374728050[78] = 0;
   out_6616296833374728050[79] = 0;
   out_6616296833374728050[80] = 0;
   out_6616296833374728050[81] = 0;
   out_6616296833374728050[82] = 0;
   out_6616296833374728050[83] = 0;
   out_6616296833374728050[84] = 0;
   out_6616296833374728050[85] = 0;
   out_6616296833374728050[86] = 0;
   out_6616296833374728050[87] = 0.5*state[3];
   out_6616296833374728050[88] = 0.5*state[6];
   out_6616296833374728050[89] = -0.5*state[5];
   out_6616296833374728050[90] = 0;
   out_6616296833374728050[91] = 0;
   out_6616296833374728050[92] = 0;
   out_6616296833374728050[93] = 0;
   out_6616296833374728050[94] = 0;
   out_6616296833374728050[95] = 0;
   out_6616296833374728050[96] = 0;
   out_6616296833374728050[97] = 0;
   out_6616296833374728050[98] = 0;
   out_6616296833374728050[99] = 0;
   out_6616296833374728050[100] = 0;
   out_6616296833374728050[101] = 0;
   out_6616296833374728050[102] = 0;
   out_6616296833374728050[103] = 0;
   out_6616296833374728050[104] = 0;
   out_6616296833374728050[105] = 0;
   out_6616296833374728050[106] = 0;
   out_6616296833374728050[107] = 0;
   out_6616296833374728050[108] = -0.5*state[6];
   out_6616296833374728050[109] = 0.5*state[3];
   out_6616296833374728050[110] = 0.5*state[4];
   out_6616296833374728050[111] = 0;
   out_6616296833374728050[112] = 0;
   out_6616296833374728050[113] = 0;
   out_6616296833374728050[114] = 0;
   out_6616296833374728050[115] = 0;
   out_6616296833374728050[116] = 0;
   out_6616296833374728050[117] = 0;
   out_6616296833374728050[118] = 0;
   out_6616296833374728050[119] = 0;
   out_6616296833374728050[120] = 0;
   out_6616296833374728050[121] = 0;
   out_6616296833374728050[122] = 0;
   out_6616296833374728050[123] = 0;
   out_6616296833374728050[124] = 0;
   out_6616296833374728050[125] = 0;
   out_6616296833374728050[126] = 0;
   out_6616296833374728050[127] = 0;
   out_6616296833374728050[128] = 0;
   out_6616296833374728050[129] = 0.5*state[5];
   out_6616296833374728050[130] = -0.5*state[4];
   out_6616296833374728050[131] = 0.5*state[3];
   out_6616296833374728050[132] = 0;
   out_6616296833374728050[133] = 0;
   out_6616296833374728050[134] = 0;
   out_6616296833374728050[135] = 0;
   out_6616296833374728050[136] = 0;
   out_6616296833374728050[137] = 0;
   out_6616296833374728050[138] = 0;
   out_6616296833374728050[139] = 0;
   out_6616296833374728050[140] = 0;
   out_6616296833374728050[141] = 0;
   out_6616296833374728050[142] = 0;
   out_6616296833374728050[143] = 0;
   out_6616296833374728050[144] = 0;
   out_6616296833374728050[145] = 0;
   out_6616296833374728050[146] = 0;
   out_6616296833374728050[147] = 0;
   out_6616296833374728050[148] = 0;
   out_6616296833374728050[149] = 0;
   out_6616296833374728050[150] = 0;
   out_6616296833374728050[151] = 0;
   out_6616296833374728050[152] = 0;
   out_6616296833374728050[153] = 1.0;
   out_6616296833374728050[154] = 0;
   out_6616296833374728050[155] = 0;
   out_6616296833374728050[156] = 0;
   out_6616296833374728050[157] = 0;
   out_6616296833374728050[158] = 0;
   out_6616296833374728050[159] = 0;
   out_6616296833374728050[160] = 0;
   out_6616296833374728050[161] = 0;
   out_6616296833374728050[162] = 0;
   out_6616296833374728050[163] = 0;
   out_6616296833374728050[164] = 0;
   out_6616296833374728050[165] = 0;
   out_6616296833374728050[166] = 0;
   out_6616296833374728050[167] = 0;
   out_6616296833374728050[168] = 0;
   out_6616296833374728050[169] = 0;
   out_6616296833374728050[170] = 0;
   out_6616296833374728050[171] = 0;
   out_6616296833374728050[172] = 0;
   out_6616296833374728050[173] = 0;
   out_6616296833374728050[174] = 0;
   out_6616296833374728050[175] = 1.0;
   out_6616296833374728050[176] = 0;
   out_6616296833374728050[177] = 0;
   out_6616296833374728050[178] = 0;
   out_6616296833374728050[179] = 0;
   out_6616296833374728050[180] = 0;
   out_6616296833374728050[181] = 0;
   out_6616296833374728050[182] = 0;
   out_6616296833374728050[183] = 0;
   out_6616296833374728050[184] = 0;
   out_6616296833374728050[185] = 0;
   out_6616296833374728050[186] = 0;
   out_6616296833374728050[187] = 0;
   out_6616296833374728050[188] = 0;
   out_6616296833374728050[189] = 0;
   out_6616296833374728050[190] = 0;
   out_6616296833374728050[191] = 0;
   out_6616296833374728050[192] = 0;
   out_6616296833374728050[193] = 0;
   out_6616296833374728050[194] = 0;
   out_6616296833374728050[195] = 0;
   out_6616296833374728050[196] = 0;
   out_6616296833374728050[197] = 1.0;
   out_6616296833374728050[198] = 0;
   out_6616296833374728050[199] = 0;
   out_6616296833374728050[200] = 0;
   out_6616296833374728050[201] = 0;
   out_6616296833374728050[202] = 0;
   out_6616296833374728050[203] = 0;
   out_6616296833374728050[204] = 0;
   out_6616296833374728050[205] = 0;
   out_6616296833374728050[206] = 0;
   out_6616296833374728050[207] = 0;
   out_6616296833374728050[208] = 0;
   out_6616296833374728050[209] = 0;
   out_6616296833374728050[210] = 0;
   out_6616296833374728050[211] = 0;
   out_6616296833374728050[212] = 0;
   out_6616296833374728050[213] = 0;
   out_6616296833374728050[214] = 0;
   out_6616296833374728050[215] = 0;
   out_6616296833374728050[216] = 0;
   out_6616296833374728050[217] = 0;
   out_6616296833374728050[218] = 0;
   out_6616296833374728050[219] = 1.0;
   out_6616296833374728050[220] = 0;
   out_6616296833374728050[221] = 0;
   out_6616296833374728050[222] = 0;
   out_6616296833374728050[223] = 0;
   out_6616296833374728050[224] = 0;
   out_6616296833374728050[225] = 0;
   out_6616296833374728050[226] = 0;
   out_6616296833374728050[227] = 0;
   out_6616296833374728050[228] = 0;
   out_6616296833374728050[229] = 0;
   out_6616296833374728050[230] = 0;
   out_6616296833374728050[231] = 0;
   out_6616296833374728050[232] = 0;
   out_6616296833374728050[233] = 0;
   out_6616296833374728050[234] = 0;
   out_6616296833374728050[235] = 0;
   out_6616296833374728050[236] = 0;
   out_6616296833374728050[237] = 0;
   out_6616296833374728050[238] = 0;
   out_6616296833374728050[239] = 0;
   out_6616296833374728050[240] = 0;
   out_6616296833374728050[241] = 1.0;
   out_6616296833374728050[242] = 0;
   out_6616296833374728050[243] = 0;
   out_6616296833374728050[244] = 0;
   out_6616296833374728050[245] = 0;
   out_6616296833374728050[246] = 0;
   out_6616296833374728050[247] = 0;
   out_6616296833374728050[248] = 0;
   out_6616296833374728050[249] = 0;
   out_6616296833374728050[250] = 0;
   out_6616296833374728050[251] = 0;
   out_6616296833374728050[252] = 0;
   out_6616296833374728050[253] = 0;
   out_6616296833374728050[254] = 0;
   out_6616296833374728050[255] = 0;
   out_6616296833374728050[256] = 0;
   out_6616296833374728050[257] = 0;
   out_6616296833374728050[258] = 0;
   out_6616296833374728050[259] = 0;
   out_6616296833374728050[260] = 0;
   out_6616296833374728050[261] = 0;
   out_6616296833374728050[262] = 0;
   out_6616296833374728050[263] = 1.0;
   out_6616296833374728050[264] = 0;
   out_6616296833374728050[265] = 0;
   out_6616296833374728050[266] = 0;
   out_6616296833374728050[267] = 0;
   out_6616296833374728050[268] = 0;
   out_6616296833374728050[269] = 0;
   out_6616296833374728050[270] = 0;
   out_6616296833374728050[271] = 0;
   out_6616296833374728050[272] = 0;
   out_6616296833374728050[273] = 0;
   out_6616296833374728050[274] = 0;
   out_6616296833374728050[275] = 0;
   out_6616296833374728050[276] = 0;
   out_6616296833374728050[277] = 0;
   out_6616296833374728050[278] = 0;
   out_6616296833374728050[279] = 0;
   out_6616296833374728050[280] = 0;
   out_6616296833374728050[281] = 0;
   out_6616296833374728050[282] = 0;
   out_6616296833374728050[283] = 0;
   out_6616296833374728050[284] = 0;
   out_6616296833374728050[285] = 1.0;
   out_6616296833374728050[286] = 0;
   out_6616296833374728050[287] = 0;
   out_6616296833374728050[288] = 0;
   out_6616296833374728050[289] = 0;
   out_6616296833374728050[290] = 0;
   out_6616296833374728050[291] = 0;
   out_6616296833374728050[292] = 0;
   out_6616296833374728050[293] = 0;
   out_6616296833374728050[294] = 0;
   out_6616296833374728050[295] = 0;
   out_6616296833374728050[296] = 0;
   out_6616296833374728050[297] = 0;
   out_6616296833374728050[298] = 0;
   out_6616296833374728050[299] = 0;
   out_6616296833374728050[300] = 0;
   out_6616296833374728050[301] = 0;
   out_6616296833374728050[302] = 0;
   out_6616296833374728050[303] = 0;
   out_6616296833374728050[304] = 0;
   out_6616296833374728050[305] = 0;
   out_6616296833374728050[306] = 0;
   out_6616296833374728050[307] = 1.0;
   out_6616296833374728050[308] = 0;
   out_6616296833374728050[309] = 0;
   out_6616296833374728050[310] = 0;
   out_6616296833374728050[311] = 0;
   out_6616296833374728050[312] = 0;
   out_6616296833374728050[313] = 0;
   out_6616296833374728050[314] = 0;
   out_6616296833374728050[315] = 0;
   out_6616296833374728050[316] = 0;
   out_6616296833374728050[317] = 0;
   out_6616296833374728050[318] = 0;
   out_6616296833374728050[319] = 0;
   out_6616296833374728050[320] = 0;
   out_6616296833374728050[321] = 0;
   out_6616296833374728050[322] = 0;
   out_6616296833374728050[323] = 0;
   out_6616296833374728050[324] = 0;
   out_6616296833374728050[325] = 0;
   out_6616296833374728050[326] = 0;
   out_6616296833374728050[327] = 0;
   out_6616296833374728050[328] = 0;
   out_6616296833374728050[329] = 1.0;
   out_6616296833374728050[330] = 0;
   out_6616296833374728050[331] = 0;
   out_6616296833374728050[332] = 0;
   out_6616296833374728050[333] = 0;
   out_6616296833374728050[334] = 0;
   out_6616296833374728050[335] = 0;
   out_6616296833374728050[336] = 0;
   out_6616296833374728050[337] = 0;
   out_6616296833374728050[338] = 0;
   out_6616296833374728050[339] = 0;
   out_6616296833374728050[340] = 0;
   out_6616296833374728050[341] = 0;
   out_6616296833374728050[342] = 0;
   out_6616296833374728050[343] = 0;
   out_6616296833374728050[344] = 0;
   out_6616296833374728050[345] = 0;
   out_6616296833374728050[346] = 0;
   out_6616296833374728050[347] = 0;
   out_6616296833374728050[348] = 0;
   out_6616296833374728050[349] = 0;
   out_6616296833374728050[350] = 0;
   out_6616296833374728050[351] = 1.0;
   out_6616296833374728050[352] = 0;
   out_6616296833374728050[353] = 0;
   out_6616296833374728050[354] = 0;
   out_6616296833374728050[355] = 0;
   out_6616296833374728050[356] = 0;
   out_6616296833374728050[357] = 0;
   out_6616296833374728050[358] = 0;
   out_6616296833374728050[359] = 0;
   out_6616296833374728050[360] = 0;
   out_6616296833374728050[361] = 0;
   out_6616296833374728050[362] = 0;
   out_6616296833374728050[363] = 0;
   out_6616296833374728050[364] = 0;
   out_6616296833374728050[365] = 0;
   out_6616296833374728050[366] = 0;
   out_6616296833374728050[367] = 0;
   out_6616296833374728050[368] = 0;
   out_6616296833374728050[369] = 0;
   out_6616296833374728050[370] = 0;
   out_6616296833374728050[371] = 0;
   out_6616296833374728050[372] = 0;
   out_6616296833374728050[373] = 1.0;
   out_6616296833374728050[374] = 0;
   out_6616296833374728050[375] = 0;
   out_6616296833374728050[376] = 0;
   out_6616296833374728050[377] = 0;
   out_6616296833374728050[378] = 0;
   out_6616296833374728050[379] = 0;
   out_6616296833374728050[380] = 0;
   out_6616296833374728050[381] = 0;
   out_6616296833374728050[382] = 0;
   out_6616296833374728050[383] = 0;
   out_6616296833374728050[384] = 0;
   out_6616296833374728050[385] = 0;
   out_6616296833374728050[386] = 0;
   out_6616296833374728050[387] = 0;
   out_6616296833374728050[388] = 0;
   out_6616296833374728050[389] = 0;
   out_6616296833374728050[390] = 0;
   out_6616296833374728050[391] = 0;
   out_6616296833374728050[392] = 0;
   out_6616296833374728050[393] = 0;
   out_6616296833374728050[394] = 0;
   out_6616296833374728050[395] = 1.0;
   out_6616296833374728050[396] = 0;
   out_6616296833374728050[397] = 0;
   out_6616296833374728050[398] = 0;
   out_6616296833374728050[399] = 0;
   out_6616296833374728050[400] = 0;
   out_6616296833374728050[401] = 0;
   out_6616296833374728050[402] = 0;
   out_6616296833374728050[403] = 0;
   out_6616296833374728050[404] = 0;
   out_6616296833374728050[405] = 0;
   out_6616296833374728050[406] = 0;
   out_6616296833374728050[407] = 0;
   out_6616296833374728050[408] = 0;
   out_6616296833374728050[409] = 0;
   out_6616296833374728050[410] = 0;
   out_6616296833374728050[411] = 0;
   out_6616296833374728050[412] = 0;
   out_6616296833374728050[413] = 0;
   out_6616296833374728050[414] = 0;
   out_6616296833374728050[415] = 0;
   out_6616296833374728050[416] = 0;
   out_6616296833374728050[417] = 1.0;
   out_6616296833374728050[418] = 0;
   out_6616296833374728050[419] = 0;
   out_6616296833374728050[420] = 0;
   out_6616296833374728050[421] = 0;
   out_6616296833374728050[422] = 0;
   out_6616296833374728050[423] = 0;
   out_6616296833374728050[424] = 0;
   out_6616296833374728050[425] = 0;
   out_6616296833374728050[426] = 0;
   out_6616296833374728050[427] = 0;
   out_6616296833374728050[428] = 0;
   out_6616296833374728050[429] = 0;
   out_6616296833374728050[430] = 0;
   out_6616296833374728050[431] = 0;
   out_6616296833374728050[432] = 0;
   out_6616296833374728050[433] = 0;
   out_6616296833374728050[434] = 0;
   out_6616296833374728050[435] = 0;
   out_6616296833374728050[436] = 0;
   out_6616296833374728050[437] = 0;
   out_6616296833374728050[438] = 0;
   out_6616296833374728050[439] = 1.0;
   out_6616296833374728050[440] = 0;
   out_6616296833374728050[441] = 0;
   out_6616296833374728050[442] = 0;
   out_6616296833374728050[443] = 0;
   out_6616296833374728050[444] = 0;
   out_6616296833374728050[445] = 0;
   out_6616296833374728050[446] = 0;
   out_6616296833374728050[447] = 0;
   out_6616296833374728050[448] = 0;
   out_6616296833374728050[449] = 0;
   out_6616296833374728050[450] = 0;
   out_6616296833374728050[451] = 0;
   out_6616296833374728050[452] = 0;
   out_6616296833374728050[453] = 0;
   out_6616296833374728050[454] = 0;
   out_6616296833374728050[455] = 0;
   out_6616296833374728050[456] = 0;
   out_6616296833374728050[457] = 0;
   out_6616296833374728050[458] = 0;
   out_6616296833374728050[459] = 0;
   out_6616296833374728050[460] = 0;
   out_6616296833374728050[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6507075395670953651) {
   out_6507075395670953651[0] = dt*state[7] + state[0];
   out_6507075395670953651[1] = dt*state[8] + state[1];
   out_6507075395670953651[2] = dt*state[9] + state[2];
   out_6507075395670953651[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6507075395670953651[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6507075395670953651[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6507075395670953651[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6507075395670953651[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6507075395670953651[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6507075395670953651[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6507075395670953651[10] = state[10];
   out_6507075395670953651[11] = state[11];
   out_6507075395670953651[12] = state[12];
   out_6507075395670953651[13] = state[13];
   out_6507075395670953651[14] = state[14];
   out_6507075395670953651[15] = state[15];
   out_6507075395670953651[16] = state[16];
   out_6507075395670953651[17] = state[17];
   out_6507075395670953651[18] = state[18];
   out_6507075395670953651[19] = state[19];
   out_6507075395670953651[20] = state[20];
   out_6507075395670953651[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5453224946131260124) {
   out_5453224946131260124[0] = 1;
   out_5453224946131260124[1] = 0;
   out_5453224946131260124[2] = 0;
   out_5453224946131260124[3] = 0;
   out_5453224946131260124[4] = 0;
   out_5453224946131260124[5] = 0;
   out_5453224946131260124[6] = dt;
   out_5453224946131260124[7] = 0;
   out_5453224946131260124[8] = 0;
   out_5453224946131260124[9] = 0;
   out_5453224946131260124[10] = 0;
   out_5453224946131260124[11] = 0;
   out_5453224946131260124[12] = 0;
   out_5453224946131260124[13] = 0;
   out_5453224946131260124[14] = 0;
   out_5453224946131260124[15] = 0;
   out_5453224946131260124[16] = 0;
   out_5453224946131260124[17] = 0;
   out_5453224946131260124[18] = 0;
   out_5453224946131260124[19] = 0;
   out_5453224946131260124[20] = 0;
   out_5453224946131260124[21] = 0;
   out_5453224946131260124[22] = 1;
   out_5453224946131260124[23] = 0;
   out_5453224946131260124[24] = 0;
   out_5453224946131260124[25] = 0;
   out_5453224946131260124[26] = 0;
   out_5453224946131260124[27] = 0;
   out_5453224946131260124[28] = dt;
   out_5453224946131260124[29] = 0;
   out_5453224946131260124[30] = 0;
   out_5453224946131260124[31] = 0;
   out_5453224946131260124[32] = 0;
   out_5453224946131260124[33] = 0;
   out_5453224946131260124[34] = 0;
   out_5453224946131260124[35] = 0;
   out_5453224946131260124[36] = 0;
   out_5453224946131260124[37] = 0;
   out_5453224946131260124[38] = 0;
   out_5453224946131260124[39] = 0;
   out_5453224946131260124[40] = 0;
   out_5453224946131260124[41] = 0;
   out_5453224946131260124[42] = 0;
   out_5453224946131260124[43] = 0;
   out_5453224946131260124[44] = 1;
   out_5453224946131260124[45] = 0;
   out_5453224946131260124[46] = 0;
   out_5453224946131260124[47] = 0;
   out_5453224946131260124[48] = 0;
   out_5453224946131260124[49] = 0;
   out_5453224946131260124[50] = dt;
   out_5453224946131260124[51] = 0;
   out_5453224946131260124[52] = 0;
   out_5453224946131260124[53] = 0;
   out_5453224946131260124[54] = 0;
   out_5453224946131260124[55] = 0;
   out_5453224946131260124[56] = 0;
   out_5453224946131260124[57] = 0;
   out_5453224946131260124[58] = 0;
   out_5453224946131260124[59] = 0;
   out_5453224946131260124[60] = 0;
   out_5453224946131260124[61] = 0;
   out_5453224946131260124[62] = 0;
   out_5453224946131260124[63] = 0;
   out_5453224946131260124[64] = 0;
   out_5453224946131260124[65] = 0;
   out_5453224946131260124[66] = 1;
   out_5453224946131260124[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5453224946131260124[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5453224946131260124[69] = 0;
   out_5453224946131260124[70] = 0;
   out_5453224946131260124[71] = 0;
   out_5453224946131260124[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5453224946131260124[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5453224946131260124[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5453224946131260124[75] = 0;
   out_5453224946131260124[76] = 0;
   out_5453224946131260124[77] = 0;
   out_5453224946131260124[78] = 0;
   out_5453224946131260124[79] = 0;
   out_5453224946131260124[80] = 0;
   out_5453224946131260124[81] = 0;
   out_5453224946131260124[82] = 0;
   out_5453224946131260124[83] = 0;
   out_5453224946131260124[84] = 0;
   out_5453224946131260124[85] = 0;
   out_5453224946131260124[86] = 0;
   out_5453224946131260124[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5453224946131260124[88] = 1;
   out_5453224946131260124[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5453224946131260124[90] = 0;
   out_5453224946131260124[91] = 0;
   out_5453224946131260124[92] = 0;
   out_5453224946131260124[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5453224946131260124[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5453224946131260124[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5453224946131260124[96] = 0;
   out_5453224946131260124[97] = 0;
   out_5453224946131260124[98] = 0;
   out_5453224946131260124[99] = 0;
   out_5453224946131260124[100] = 0;
   out_5453224946131260124[101] = 0;
   out_5453224946131260124[102] = 0;
   out_5453224946131260124[103] = 0;
   out_5453224946131260124[104] = 0;
   out_5453224946131260124[105] = 0;
   out_5453224946131260124[106] = 0;
   out_5453224946131260124[107] = 0;
   out_5453224946131260124[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5453224946131260124[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5453224946131260124[110] = 1;
   out_5453224946131260124[111] = 0;
   out_5453224946131260124[112] = 0;
   out_5453224946131260124[113] = 0;
   out_5453224946131260124[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5453224946131260124[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5453224946131260124[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5453224946131260124[117] = 0;
   out_5453224946131260124[118] = 0;
   out_5453224946131260124[119] = 0;
   out_5453224946131260124[120] = 0;
   out_5453224946131260124[121] = 0;
   out_5453224946131260124[122] = 0;
   out_5453224946131260124[123] = 0;
   out_5453224946131260124[124] = 0;
   out_5453224946131260124[125] = 0;
   out_5453224946131260124[126] = 0;
   out_5453224946131260124[127] = 0;
   out_5453224946131260124[128] = 0;
   out_5453224946131260124[129] = 0;
   out_5453224946131260124[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5453224946131260124[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5453224946131260124[132] = 1;
   out_5453224946131260124[133] = 0;
   out_5453224946131260124[134] = 0;
   out_5453224946131260124[135] = 0;
   out_5453224946131260124[136] = 0;
   out_5453224946131260124[137] = 0;
   out_5453224946131260124[138] = 0;
   out_5453224946131260124[139] = 0;
   out_5453224946131260124[140] = 0;
   out_5453224946131260124[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5453224946131260124[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5453224946131260124[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5453224946131260124[144] = 0;
   out_5453224946131260124[145] = 0;
   out_5453224946131260124[146] = 0;
   out_5453224946131260124[147] = 0;
   out_5453224946131260124[148] = 0;
   out_5453224946131260124[149] = 0;
   out_5453224946131260124[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5453224946131260124[151] = 0;
   out_5453224946131260124[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5453224946131260124[153] = 0;
   out_5453224946131260124[154] = 1;
   out_5453224946131260124[155] = 0;
   out_5453224946131260124[156] = 0;
   out_5453224946131260124[157] = 0;
   out_5453224946131260124[158] = 0;
   out_5453224946131260124[159] = 0;
   out_5453224946131260124[160] = 0;
   out_5453224946131260124[161] = 0;
   out_5453224946131260124[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5453224946131260124[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5453224946131260124[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5453224946131260124[165] = 0;
   out_5453224946131260124[166] = 0;
   out_5453224946131260124[167] = 0;
   out_5453224946131260124[168] = 0;
   out_5453224946131260124[169] = 0;
   out_5453224946131260124[170] = 0;
   out_5453224946131260124[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5453224946131260124[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5453224946131260124[173] = 0;
   out_5453224946131260124[174] = 0;
   out_5453224946131260124[175] = 0;
   out_5453224946131260124[176] = 1;
   out_5453224946131260124[177] = 0;
   out_5453224946131260124[178] = 0;
   out_5453224946131260124[179] = 0;
   out_5453224946131260124[180] = 0;
   out_5453224946131260124[181] = 0;
   out_5453224946131260124[182] = 0;
   out_5453224946131260124[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5453224946131260124[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5453224946131260124[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5453224946131260124[186] = 0;
   out_5453224946131260124[187] = 0;
   out_5453224946131260124[188] = 0;
   out_5453224946131260124[189] = 0;
   out_5453224946131260124[190] = 0;
   out_5453224946131260124[191] = 0;
   out_5453224946131260124[192] = 0;
   out_5453224946131260124[193] = 0;
   out_5453224946131260124[194] = 0;
   out_5453224946131260124[195] = 0;
   out_5453224946131260124[196] = 0;
   out_5453224946131260124[197] = 0;
   out_5453224946131260124[198] = 1;
   out_5453224946131260124[199] = 0;
   out_5453224946131260124[200] = 0;
   out_5453224946131260124[201] = 0;
   out_5453224946131260124[202] = 0;
   out_5453224946131260124[203] = 0;
   out_5453224946131260124[204] = 0;
   out_5453224946131260124[205] = 0;
   out_5453224946131260124[206] = 0;
   out_5453224946131260124[207] = 0;
   out_5453224946131260124[208] = 0;
   out_5453224946131260124[209] = 0;
   out_5453224946131260124[210] = 0;
   out_5453224946131260124[211] = 0;
   out_5453224946131260124[212] = 0;
   out_5453224946131260124[213] = 0;
   out_5453224946131260124[214] = 0;
   out_5453224946131260124[215] = 0;
   out_5453224946131260124[216] = 0;
   out_5453224946131260124[217] = 0;
   out_5453224946131260124[218] = 0;
   out_5453224946131260124[219] = 0;
   out_5453224946131260124[220] = 1;
   out_5453224946131260124[221] = 0;
   out_5453224946131260124[222] = 0;
   out_5453224946131260124[223] = 0;
   out_5453224946131260124[224] = 0;
   out_5453224946131260124[225] = 0;
   out_5453224946131260124[226] = 0;
   out_5453224946131260124[227] = 0;
   out_5453224946131260124[228] = 0;
   out_5453224946131260124[229] = 0;
   out_5453224946131260124[230] = 0;
   out_5453224946131260124[231] = 0;
   out_5453224946131260124[232] = 0;
   out_5453224946131260124[233] = 0;
   out_5453224946131260124[234] = 0;
   out_5453224946131260124[235] = 0;
   out_5453224946131260124[236] = 0;
   out_5453224946131260124[237] = 0;
   out_5453224946131260124[238] = 0;
   out_5453224946131260124[239] = 0;
   out_5453224946131260124[240] = 0;
   out_5453224946131260124[241] = 0;
   out_5453224946131260124[242] = 1;
   out_5453224946131260124[243] = 0;
   out_5453224946131260124[244] = 0;
   out_5453224946131260124[245] = 0;
   out_5453224946131260124[246] = 0;
   out_5453224946131260124[247] = 0;
   out_5453224946131260124[248] = 0;
   out_5453224946131260124[249] = 0;
   out_5453224946131260124[250] = 0;
   out_5453224946131260124[251] = 0;
   out_5453224946131260124[252] = 0;
   out_5453224946131260124[253] = 0;
   out_5453224946131260124[254] = 0;
   out_5453224946131260124[255] = 0;
   out_5453224946131260124[256] = 0;
   out_5453224946131260124[257] = 0;
   out_5453224946131260124[258] = 0;
   out_5453224946131260124[259] = 0;
   out_5453224946131260124[260] = 0;
   out_5453224946131260124[261] = 0;
   out_5453224946131260124[262] = 0;
   out_5453224946131260124[263] = 0;
   out_5453224946131260124[264] = 1;
   out_5453224946131260124[265] = 0;
   out_5453224946131260124[266] = 0;
   out_5453224946131260124[267] = 0;
   out_5453224946131260124[268] = 0;
   out_5453224946131260124[269] = 0;
   out_5453224946131260124[270] = 0;
   out_5453224946131260124[271] = 0;
   out_5453224946131260124[272] = 0;
   out_5453224946131260124[273] = 0;
   out_5453224946131260124[274] = 0;
   out_5453224946131260124[275] = 0;
   out_5453224946131260124[276] = 0;
   out_5453224946131260124[277] = 0;
   out_5453224946131260124[278] = 0;
   out_5453224946131260124[279] = 0;
   out_5453224946131260124[280] = 0;
   out_5453224946131260124[281] = 0;
   out_5453224946131260124[282] = 0;
   out_5453224946131260124[283] = 0;
   out_5453224946131260124[284] = 0;
   out_5453224946131260124[285] = 0;
   out_5453224946131260124[286] = 1;
   out_5453224946131260124[287] = 0;
   out_5453224946131260124[288] = 0;
   out_5453224946131260124[289] = 0;
   out_5453224946131260124[290] = 0;
   out_5453224946131260124[291] = 0;
   out_5453224946131260124[292] = 0;
   out_5453224946131260124[293] = 0;
   out_5453224946131260124[294] = 0;
   out_5453224946131260124[295] = 0;
   out_5453224946131260124[296] = 0;
   out_5453224946131260124[297] = 0;
   out_5453224946131260124[298] = 0;
   out_5453224946131260124[299] = 0;
   out_5453224946131260124[300] = 0;
   out_5453224946131260124[301] = 0;
   out_5453224946131260124[302] = 0;
   out_5453224946131260124[303] = 0;
   out_5453224946131260124[304] = 0;
   out_5453224946131260124[305] = 0;
   out_5453224946131260124[306] = 0;
   out_5453224946131260124[307] = 0;
   out_5453224946131260124[308] = 1;
   out_5453224946131260124[309] = 0;
   out_5453224946131260124[310] = 0;
   out_5453224946131260124[311] = 0;
   out_5453224946131260124[312] = 0;
   out_5453224946131260124[313] = 0;
   out_5453224946131260124[314] = 0;
   out_5453224946131260124[315] = 0;
   out_5453224946131260124[316] = 0;
   out_5453224946131260124[317] = 0;
   out_5453224946131260124[318] = 0;
   out_5453224946131260124[319] = 0;
   out_5453224946131260124[320] = 0;
   out_5453224946131260124[321] = 0;
   out_5453224946131260124[322] = 0;
   out_5453224946131260124[323] = 0;
   out_5453224946131260124[324] = 0;
   out_5453224946131260124[325] = 0;
   out_5453224946131260124[326] = 0;
   out_5453224946131260124[327] = 0;
   out_5453224946131260124[328] = 0;
   out_5453224946131260124[329] = 0;
   out_5453224946131260124[330] = 1;
   out_5453224946131260124[331] = 0;
   out_5453224946131260124[332] = 0;
   out_5453224946131260124[333] = 0;
   out_5453224946131260124[334] = 0;
   out_5453224946131260124[335] = 0;
   out_5453224946131260124[336] = 0;
   out_5453224946131260124[337] = 0;
   out_5453224946131260124[338] = 0;
   out_5453224946131260124[339] = 0;
   out_5453224946131260124[340] = 0;
   out_5453224946131260124[341] = 0;
   out_5453224946131260124[342] = 0;
   out_5453224946131260124[343] = 0;
   out_5453224946131260124[344] = 0;
   out_5453224946131260124[345] = 0;
   out_5453224946131260124[346] = 0;
   out_5453224946131260124[347] = 0;
   out_5453224946131260124[348] = 0;
   out_5453224946131260124[349] = 0;
   out_5453224946131260124[350] = 0;
   out_5453224946131260124[351] = 0;
   out_5453224946131260124[352] = 1;
   out_5453224946131260124[353] = 0;
   out_5453224946131260124[354] = 0;
   out_5453224946131260124[355] = 0;
   out_5453224946131260124[356] = 0;
   out_5453224946131260124[357] = 0;
   out_5453224946131260124[358] = 0;
   out_5453224946131260124[359] = 0;
   out_5453224946131260124[360] = 0;
   out_5453224946131260124[361] = 0;
   out_5453224946131260124[362] = 0;
   out_5453224946131260124[363] = 0;
   out_5453224946131260124[364] = 0;
   out_5453224946131260124[365] = 0;
   out_5453224946131260124[366] = 0;
   out_5453224946131260124[367] = 0;
   out_5453224946131260124[368] = 0;
   out_5453224946131260124[369] = 0;
   out_5453224946131260124[370] = 0;
   out_5453224946131260124[371] = 0;
   out_5453224946131260124[372] = 0;
   out_5453224946131260124[373] = 0;
   out_5453224946131260124[374] = 1;
   out_5453224946131260124[375] = 0;
   out_5453224946131260124[376] = 0;
   out_5453224946131260124[377] = 0;
   out_5453224946131260124[378] = 0;
   out_5453224946131260124[379] = 0;
   out_5453224946131260124[380] = 0;
   out_5453224946131260124[381] = 0;
   out_5453224946131260124[382] = 0;
   out_5453224946131260124[383] = 0;
   out_5453224946131260124[384] = 0;
   out_5453224946131260124[385] = 0;
   out_5453224946131260124[386] = 0;
   out_5453224946131260124[387] = 0;
   out_5453224946131260124[388] = 0;
   out_5453224946131260124[389] = 0;
   out_5453224946131260124[390] = 0;
   out_5453224946131260124[391] = 0;
   out_5453224946131260124[392] = 0;
   out_5453224946131260124[393] = 0;
   out_5453224946131260124[394] = 0;
   out_5453224946131260124[395] = 0;
   out_5453224946131260124[396] = 1;
   out_5453224946131260124[397] = 0;
   out_5453224946131260124[398] = 0;
   out_5453224946131260124[399] = 0;
   out_5453224946131260124[400] = 0;
   out_5453224946131260124[401] = 0;
   out_5453224946131260124[402] = 0;
   out_5453224946131260124[403] = 0;
   out_5453224946131260124[404] = 0;
   out_5453224946131260124[405] = 0;
   out_5453224946131260124[406] = 0;
   out_5453224946131260124[407] = 0;
   out_5453224946131260124[408] = 0;
   out_5453224946131260124[409] = 0;
   out_5453224946131260124[410] = 0;
   out_5453224946131260124[411] = 0;
   out_5453224946131260124[412] = 0;
   out_5453224946131260124[413] = 0;
   out_5453224946131260124[414] = 0;
   out_5453224946131260124[415] = 0;
   out_5453224946131260124[416] = 0;
   out_5453224946131260124[417] = 0;
   out_5453224946131260124[418] = 1;
   out_5453224946131260124[419] = 0;
   out_5453224946131260124[420] = 0;
   out_5453224946131260124[421] = 0;
   out_5453224946131260124[422] = 0;
   out_5453224946131260124[423] = 0;
   out_5453224946131260124[424] = 0;
   out_5453224946131260124[425] = 0;
   out_5453224946131260124[426] = 0;
   out_5453224946131260124[427] = 0;
   out_5453224946131260124[428] = 0;
   out_5453224946131260124[429] = 0;
   out_5453224946131260124[430] = 0;
   out_5453224946131260124[431] = 0;
   out_5453224946131260124[432] = 0;
   out_5453224946131260124[433] = 0;
   out_5453224946131260124[434] = 0;
   out_5453224946131260124[435] = 0;
   out_5453224946131260124[436] = 0;
   out_5453224946131260124[437] = 0;
   out_5453224946131260124[438] = 0;
   out_5453224946131260124[439] = 0;
   out_5453224946131260124[440] = 1;
}
void h_4(double *state, double *unused, double *out_3132156196268012346) {
   out_3132156196268012346[0] = state[10] + state[13];
   out_3132156196268012346[1] = state[11] + state[14];
   out_3132156196268012346[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6543919262050482104) {
   out_6543919262050482104[0] = 0;
   out_6543919262050482104[1] = 0;
   out_6543919262050482104[2] = 0;
   out_6543919262050482104[3] = 0;
   out_6543919262050482104[4] = 0;
   out_6543919262050482104[5] = 0;
   out_6543919262050482104[6] = 0;
   out_6543919262050482104[7] = 0;
   out_6543919262050482104[8] = 0;
   out_6543919262050482104[9] = 0;
   out_6543919262050482104[10] = 1;
   out_6543919262050482104[11] = 0;
   out_6543919262050482104[12] = 0;
   out_6543919262050482104[13] = 1;
   out_6543919262050482104[14] = 0;
   out_6543919262050482104[15] = 0;
   out_6543919262050482104[16] = 0;
   out_6543919262050482104[17] = 0;
   out_6543919262050482104[18] = 0;
   out_6543919262050482104[19] = 0;
   out_6543919262050482104[20] = 0;
   out_6543919262050482104[21] = 0;
   out_6543919262050482104[22] = 0;
   out_6543919262050482104[23] = 0;
   out_6543919262050482104[24] = 0;
   out_6543919262050482104[25] = 0;
   out_6543919262050482104[26] = 0;
   out_6543919262050482104[27] = 0;
   out_6543919262050482104[28] = 0;
   out_6543919262050482104[29] = 0;
   out_6543919262050482104[30] = 0;
   out_6543919262050482104[31] = 0;
   out_6543919262050482104[32] = 0;
   out_6543919262050482104[33] = 1;
   out_6543919262050482104[34] = 0;
   out_6543919262050482104[35] = 0;
   out_6543919262050482104[36] = 1;
   out_6543919262050482104[37] = 0;
   out_6543919262050482104[38] = 0;
   out_6543919262050482104[39] = 0;
   out_6543919262050482104[40] = 0;
   out_6543919262050482104[41] = 0;
   out_6543919262050482104[42] = 0;
   out_6543919262050482104[43] = 0;
   out_6543919262050482104[44] = 0;
   out_6543919262050482104[45] = 0;
   out_6543919262050482104[46] = 0;
   out_6543919262050482104[47] = 0;
   out_6543919262050482104[48] = 0;
   out_6543919262050482104[49] = 0;
   out_6543919262050482104[50] = 0;
   out_6543919262050482104[51] = 0;
   out_6543919262050482104[52] = 0;
   out_6543919262050482104[53] = 0;
   out_6543919262050482104[54] = 0;
   out_6543919262050482104[55] = 0;
   out_6543919262050482104[56] = 1;
   out_6543919262050482104[57] = 0;
   out_6543919262050482104[58] = 0;
   out_6543919262050482104[59] = 1;
   out_6543919262050482104[60] = 0;
   out_6543919262050482104[61] = 0;
   out_6543919262050482104[62] = 0;
   out_6543919262050482104[63] = 0;
   out_6543919262050482104[64] = 0;
   out_6543919262050482104[65] = 0;
}
void h_9(double *state, double *unused, double *out_8022284431550274375) {
   out_8022284431550274375[0] = state[10];
   out_8022284431550274375[1] = state[11];
   out_8022284431550274375[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4615605876394622042) {
   out_4615605876394622042[0] = 0;
   out_4615605876394622042[1] = 0;
   out_4615605876394622042[2] = 0;
   out_4615605876394622042[3] = 0;
   out_4615605876394622042[4] = 0;
   out_4615605876394622042[5] = 0;
   out_4615605876394622042[6] = 0;
   out_4615605876394622042[7] = 0;
   out_4615605876394622042[8] = 0;
   out_4615605876394622042[9] = 0;
   out_4615605876394622042[10] = 1;
   out_4615605876394622042[11] = 0;
   out_4615605876394622042[12] = 0;
   out_4615605876394622042[13] = 0;
   out_4615605876394622042[14] = 0;
   out_4615605876394622042[15] = 0;
   out_4615605876394622042[16] = 0;
   out_4615605876394622042[17] = 0;
   out_4615605876394622042[18] = 0;
   out_4615605876394622042[19] = 0;
   out_4615605876394622042[20] = 0;
   out_4615605876394622042[21] = 0;
   out_4615605876394622042[22] = 0;
   out_4615605876394622042[23] = 0;
   out_4615605876394622042[24] = 0;
   out_4615605876394622042[25] = 0;
   out_4615605876394622042[26] = 0;
   out_4615605876394622042[27] = 0;
   out_4615605876394622042[28] = 0;
   out_4615605876394622042[29] = 0;
   out_4615605876394622042[30] = 0;
   out_4615605876394622042[31] = 0;
   out_4615605876394622042[32] = 0;
   out_4615605876394622042[33] = 1;
   out_4615605876394622042[34] = 0;
   out_4615605876394622042[35] = 0;
   out_4615605876394622042[36] = 0;
   out_4615605876394622042[37] = 0;
   out_4615605876394622042[38] = 0;
   out_4615605876394622042[39] = 0;
   out_4615605876394622042[40] = 0;
   out_4615605876394622042[41] = 0;
   out_4615605876394622042[42] = 0;
   out_4615605876394622042[43] = 0;
   out_4615605876394622042[44] = 0;
   out_4615605876394622042[45] = 0;
   out_4615605876394622042[46] = 0;
   out_4615605876394622042[47] = 0;
   out_4615605876394622042[48] = 0;
   out_4615605876394622042[49] = 0;
   out_4615605876394622042[50] = 0;
   out_4615605876394622042[51] = 0;
   out_4615605876394622042[52] = 0;
   out_4615605876394622042[53] = 0;
   out_4615605876394622042[54] = 0;
   out_4615605876394622042[55] = 0;
   out_4615605876394622042[56] = 1;
   out_4615605876394622042[57] = 0;
   out_4615605876394622042[58] = 0;
   out_4615605876394622042[59] = 0;
   out_4615605876394622042[60] = 0;
   out_4615605876394622042[61] = 0;
   out_4615605876394622042[62] = 0;
   out_4615605876394622042[63] = 0;
   out_4615605876394622042[64] = 0;
   out_4615605876394622042[65] = 0;
}
void h_10(double *state, double *unused, double *out_4436799979594737477) {
   out_4436799979594737477[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4436799979594737477[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4436799979594737477[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8371397723930581723) {
   out_8371397723930581723[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8371397723930581723[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8371397723930581723[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8371397723930581723[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8371397723930581723[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8371397723930581723[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8371397723930581723[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8371397723930581723[7] = 0;
   out_8371397723930581723[8] = 0;
   out_8371397723930581723[9] = 0;
   out_8371397723930581723[10] = 0;
   out_8371397723930581723[11] = 0;
   out_8371397723930581723[12] = 0;
   out_8371397723930581723[13] = 0;
   out_8371397723930581723[14] = 0;
   out_8371397723930581723[15] = 0;
   out_8371397723930581723[16] = 1;
   out_8371397723930581723[17] = 0;
   out_8371397723930581723[18] = 0;
   out_8371397723930581723[19] = 1;
   out_8371397723930581723[20] = 0;
   out_8371397723930581723[21] = 0;
   out_8371397723930581723[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8371397723930581723[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8371397723930581723[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8371397723930581723[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8371397723930581723[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8371397723930581723[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8371397723930581723[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8371397723930581723[29] = 0;
   out_8371397723930581723[30] = 0;
   out_8371397723930581723[31] = 0;
   out_8371397723930581723[32] = 0;
   out_8371397723930581723[33] = 0;
   out_8371397723930581723[34] = 0;
   out_8371397723930581723[35] = 0;
   out_8371397723930581723[36] = 0;
   out_8371397723930581723[37] = 0;
   out_8371397723930581723[38] = 0;
   out_8371397723930581723[39] = 1;
   out_8371397723930581723[40] = 0;
   out_8371397723930581723[41] = 0;
   out_8371397723930581723[42] = 1;
   out_8371397723930581723[43] = 0;
   out_8371397723930581723[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8371397723930581723[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8371397723930581723[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8371397723930581723[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8371397723930581723[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8371397723930581723[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8371397723930581723[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8371397723930581723[51] = 0;
   out_8371397723930581723[52] = 0;
   out_8371397723930581723[53] = 0;
   out_8371397723930581723[54] = 0;
   out_8371397723930581723[55] = 0;
   out_8371397723930581723[56] = 0;
   out_8371397723930581723[57] = 0;
   out_8371397723930581723[58] = 0;
   out_8371397723930581723[59] = 0;
   out_8371397723930581723[60] = 0;
   out_8371397723930581723[61] = 0;
   out_8371397723930581723[62] = 1;
   out_8371397723930581723[63] = 0;
   out_8371397723930581723[64] = 0;
   out_8371397723930581723[65] = 1;
}
void h_12(double *state, double *unused, double *out_7103844377950211132) {
   out_7103844377950211132[0] = state[0];
   out_7103844377950211132[1] = state[1];
   out_7103844377950211132[2] = state[2];
}
void H_12(double *state, double *unused, double *out_162660885007749108) {
   out_162660885007749108[0] = 1;
   out_162660885007749108[1] = 0;
   out_162660885007749108[2] = 0;
   out_162660885007749108[3] = 0;
   out_162660885007749108[4] = 0;
   out_162660885007749108[5] = 0;
   out_162660885007749108[6] = 0;
   out_162660885007749108[7] = 0;
   out_162660885007749108[8] = 0;
   out_162660885007749108[9] = 0;
   out_162660885007749108[10] = 0;
   out_162660885007749108[11] = 0;
   out_162660885007749108[12] = 0;
   out_162660885007749108[13] = 0;
   out_162660885007749108[14] = 0;
   out_162660885007749108[15] = 0;
   out_162660885007749108[16] = 0;
   out_162660885007749108[17] = 0;
   out_162660885007749108[18] = 0;
   out_162660885007749108[19] = 0;
   out_162660885007749108[20] = 0;
   out_162660885007749108[21] = 0;
   out_162660885007749108[22] = 0;
   out_162660885007749108[23] = 1;
   out_162660885007749108[24] = 0;
   out_162660885007749108[25] = 0;
   out_162660885007749108[26] = 0;
   out_162660885007749108[27] = 0;
   out_162660885007749108[28] = 0;
   out_162660885007749108[29] = 0;
   out_162660885007749108[30] = 0;
   out_162660885007749108[31] = 0;
   out_162660885007749108[32] = 0;
   out_162660885007749108[33] = 0;
   out_162660885007749108[34] = 0;
   out_162660885007749108[35] = 0;
   out_162660885007749108[36] = 0;
   out_162660885007749108[37] = 0;
   out_162660885007749108[38] = 0;
   out_162660885007749108[39] = 0;
   out_162660885007749108[40] = 0;
   out_162660885007749108[41] = 0;
   out_162660885007749108[42] = 0;
   out_162660885007749108[43] = 0;
   out_162660885007749108[44] = 0;
   out_162660885007749108[45] = 0;
   out_162660885007749108[46] = 1;
   out_162660885007749108[47] = 0;
   out_162660885007749108[48] = 0;
   out_162660885007749108[49] = 0;
   out_162660885007749108[50] = 0;
   out_162660885007749108[51] = 0;
   out_162660885007749108[52] = 0;
   out_162660885007749108[53] = 0;
   out_162660885007749108[54] = 0;
   out_162660885007749108[55] = 0;
   out_162660885007749108[56] = 0;
   out_162660885007749108[57] = 0;
   out_162660885007749108[58] = 0;
   out_162660885007749108[59] = 0;
   out_162660885007749108[60] = 0;
   out_162660885007749108[61] = 0;
   out_162660885007749108[62] = 0;
   out_162660885007749108[63] = 0;
   out_162660885007749108[64] = 0;
   out_162660885007749108[65] = 0;
}
void h_35(double *state, double *unused, double *out_1432532744458843692) {
   out_1432532744458843692[0] = state[7];
   out_1432532744458843692[1] = state[8];
   out_1432532744458843692[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8536162754286462136) {
   out_8536162754286462136[0] = 0;
   out_8536162754286462136[1] = 0;
   out_8536162754286462136[2] = 0;
   out_8536162754286462136[3] = 0;
   out_8536162754286462136[4] = 0;
   out_8536162754286462136[5] = 0;
   out_8536162754286462136[6] = 0;
   out_8536162754286462136[7] = 1;
   out_8536162754286462136[8] = 0;
   out_8536162754286462136[9] = 0;
   out_8536162754286462136[10] = 0;
   out_8536162754286462136[11] = 0;
   out_8536162754286462136[12] = 0;
   out_8536162754286462136[13] = 0;
   out_8536162754286462136[14] = 0;
   out_8536162754286462136[15] = 0;
   out_8536162754286462136[16] = 0;
   out_8536162754286462136[17] = 0;
   out_8536162754286462136[18] = 0;
   out_8536162754286462136[19] = 0;
   out_8536162754286462136[20] = 0;
   out_8536162754286462136[21] = 0;
   out_8536162754286462136[22] = 0;
   out_8536162754286462136[23] = 0;
   out_8536162754286462136[24] = 0;
   out_8536162754286462136[25] = 0;
   out_8536162754286462136[26] = 0;
   out_8536162754286462136[27] = 0;
   out_8536162754286462136[28] = 0;
   out_8536162754286462136[29] = 0;
   out_8536162754286462136[30] = 1;
   out_8536162754286462136[31] = 0;
   out_8536162754286462136[32] = 0;
   out_8536162754286462136[33] = 0;
   out_8536162754286462136[34] = 0;
   out_8536162754286462136[35] = 0;
   out_8536162754286462136[36] = 0;
   out_8536162754286462136[37] = 0;
   out_8536162754286462136[38] = 0;
   out_8536162754286462136[39] = 0;
   out_8536162754286462136[40] = 0;
   out_8536162754286462136[41] = 0;
   out_8536162754286462136[42] = 0;
   out_8536162754286462136[43] = 0;
   out_8536162754286462136[44] = 0;
   out_8536162754286462136[45] = 0;
   out_8536162754286462136[46] = 0;
   out_8536162754286462136[47] = 0;
   out_8536162754286462136[48] = 0;
   out_8536162754286462136[49] = 0;
   out_8536162754286462136[50] = 0;
   out_8536162754286462136[51] = 0;
   out_8536162754286462136[52] = 0;
   out_8536162754286462136[53] = 1;
   out_8536162754286462136[54] = 0;
   out_8536162754286462136[55] = 0;
   out_8536162754286462136[56] = 0;
   out_8536162754286462136[57] = 0;
   out_8536162754286462136[58] = 0;
   out_8536162754286462136[59] = 0;
   out_8536162754286462136[60] = 0;
   out_8536162754286462136[61] = 0;
   out_8536162754286462136[62] = 0;
   out_8536162754286462136[63] = 0;
   out_8536162754286462136[64] = 0;
   out_8536162754286462136[65] = 0;
}
void h_32(double *state, double *unused, double *out_4823252678340872667) {
   out_4823252678340872667[0] = state[3];
   out_4823252678340872667[1] = state[4];
   out_4823252678340872667[2] = state[5];
   out_4823252678340872667[3] = state[6];
}
void H_32(double *state, double *unused, double *out_725493059512098844) {
   out_725493059512098844[0] = 0;
   out_725493059512098844[1] = 0;
   out_725493059512098844[2] = 0;
   out_725493059512098844[3] = 1;
   out_725493059512098844[4] = 0;
   out_725493059512098844[5] = 0;
   out_725493059512098844[6] = 0;
   out_725493059512098844[7] = 0;
   out_725493059512098844[8] = 0;
   out_725493059512098844[9] = 0;
   out_725493059512098844[10] = 0;
   out_725493059512098844[11] = 0;
   out_725493059512098844[12] = 0;
   out_725493059512098844[13] = 0;
   out_725493059512098844[14] = 0;
   out_725493059512098844[15] = 0;
   out_725493059512098844[16] = 0;
   out_725493059512098844[17] = 0;
   out_725493059512098844[18] = 0;
   out_725493059512098844[19] = 0;
   out_725493059512098844[20] = 0;
   out_725493059512098844[21] = 0;
   out_725493059512098844[22] = 0;
   out_725493059512098844[23] = 0;
   out_725493059512098844[24] = 0;
   out_725493059512098844[25] = 0;
   out_725493059512098844[26] = 1;
   out_725493059512098844[27] = 0;
   out_725493059512098844[28] = 0;
   out_725493059512098844[29] = 0;
   out_725493059512098844[30] = 0;
   out_725493059512098844[31] = 0;
   out_725493059512098844[32] = 0;
   out_725493059512098844[33] = 0;
   out_725493059512098844[34] = 0;
   out_725493059512098844[35] = 0;
   out_725493059512098844[36] = 0;
   out_725493059512098844[37] = 0;
   out_725493059512098844[38] = 0;
   out_725493059512098844[39] = 0;
   out_725493059512098844[40] = 0;
   out_725493059512098844[41] = 0;
   out_725493059512098844[42] = 0;
   out_725493059512098844[43] = 0;
   out_725493059512098844[44] = 0;
   out_725493059512098844[45] = 0;
   out_725493059512098844[46] = 0;
   out_725493059512098844[47] = 0;
   out_725493059512098844[48] = 0;
   out_725493059512098844[49] = 1;
   out_725493059512098844[50] = 0;
   out_725493059512098844[51] = 0;
   out_725493059512098844[52] = 0;
   out_725493059512098844[53] = 0;
   out_725493059512098844[54] = 0;
   out_725493059512098844[55] = 0;
   out_725493059512098844[56] = 0;
   out_725493059512098844[57] = 0;
   out_725493059512098844[58] = 0;
   out_725493059512098844[59] = 0;
   out_725493059512098844[60] = 0;
   out_725493059512098844[61] = 0;
   out_725493059512098844[62] = 0;
   out_725493059512098844[63] = 0;
   out_725493059512098844[64] = 0;
   out_725493059512098844[65] = 0;
   out_725493059512098844[66] = 0;
   out_725493059512098844[67] = 0;
   out_725493059512098844[68] = 0;
   out_725493059512098844[69] = 0;
   out_725493059512098844[70] = 0;
   out_725493059512098844[71] = 0;
   out_725493059512098844[72] = 1;
   out_725493059512098844[73] = 0;
   out_725493059512098844[74] = 0;
   out_725493059512098844[75] = 0;
   out_725493059512098844[76] = 0;
   out_725493059512098844[77] = 0;
   out_725493059512098844[78] = 0;
   out_725493059512098844[79] = 0;
   out_725493059512098844[80] = 0;
   out_725493059512098844[81] = 0;
   out_725493059512098844[82] = 0;
   out_725493059512098844[83] = 0;
   out_725493059512098844[84] = 0;
   out_725493059512098844[85] = 0;
   out_725493059512098844[86] = 0;
   out_725493059512098844[87] = 0;
}
void h_13(double *state, double *unused, double *out_8481883597513449564) {
   out_8481883597513449564[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8481883597513449564[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8481883597513449564[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2835464733233782812) {
   out_2835464733233782812[0] = 0;
   out_2835464733233782812[1] = 0;
   out_2835464733233782812[2] = 0;
   out_2835464733233782812[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2835464733233782812[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2835464733233782812[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2835464733233782812[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2835464733233782812[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2835464733233782812[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2835464733233782812[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2835464733233782812[10] = 0;
   out_2835464733233782812[11] = 0;
   out_2835464733233782812[12] = 0;
   out_2835464733233782812[13] = 0;
   out_2835464733233782812[14] = 0;
   out_2835464733233782812[15] = 0;
   out_2835464733233782812[16] = 0;
   out_2835464733233782812[17] = 0;
   out_2835464733233782812[18] = 0;
   out_2835464733233782812[19] = 0;
   out_2835464733233782812[20] = 0;
   out_2835464733233782812[21] = 0;
   out_2835464733233782812[22] = 0;
   out_2835464733233782812[23] = 0;
   out_2835464733233782812[24] = 0;
   out_2835464733233782812[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2835464733233782812[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2835464733233782812[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2835464733233782812[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2835464733233782812[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2835464733233782812[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2835464733233782812[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2835464733233782812[32] = 0;
   out_2835464733233782812[33] = 0;
   out_2835464733233782812[34] = 0;
   out_2835464733233782812[35] = 0;
   out_2835464733233782812[36] = 0;
   out_2835464733233782812[37] = 0;
   out_2835464733233782812[38] = 0;
   out_2835464733233782812[39] = 0;
   out_2835464733233782812[40] = 0;
   out_2835464733233782812[41] = 0;
   out_2835464733233782812[42] = 0;
   out_2835464733233782812[43] = 0;
   out_2835464733233782812[44] = 0;
   out_2835464733233782812[45] = 0;
   out_2835464733233782812[46] = 0;
   out_2835464733233782812[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2835464733233782812[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2835464733233782812[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2835464733233782812[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2835464733233782812[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2835464733233782812[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2835464733233782812[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2835464733233782812[54] = 0;
   out_2835464733233782812[55] = 0;
   out_2835464733233782812[56] = 0;
   out_2835464733233782812[57] = 0;
   out_2835464733233782812[58] = 0;
   out_2835464733233782812[59] = 0;
   out_2835464733233782812[60] = 0;
   out_2835464733233782812[61] = 0;
   out_2835464733233782812[62] = 0;
   out_2835464733233782812[63] = 0;
   out_2835464733233782812[64] = 0;
   out_2835464733233782812[65] = 0;
}
void h_14(double *state, double *unused, double *out_8022284431550274375) {
   out_8022284431550274375[0] = state[10];
   out_8022284431550274375[1] = state[11];
   out_8022284431550274375[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4615605876394622042) {
   out_4615605876394622042[0] = 0;
   out_4615605876394622042[1] = 0;
   out_4615605876394622042[2] = 0;
   out_4615605876394622042[3] = 0;
   out_4615605876394622042[4] = 0;
   out_4615605876394622042[5] = 0;
   out_4615605876394622042[6] = 0;
   out_4615605876394622042[7] = 0;
   out_4615605876394622042[8] = 0;
   out_4615605876394622042[9] = 0;
   out_4615605876394622042[10] = 1;
   out_4615605876394622042[11] = 0;
   out_4615605876394622042[12] = 0;
   out_4615605876394622042[13] = 0;
   out_4615605876394622042[14] = 0;
   out_4615605876394622042[15] = 0;
   out_4615605876394622042[16] = 0;
   out_4615605876394622042[17] = 0;
   out_4615605876394622042[18] = 0;
   out_4615605876394622042[19] = 0;
   out_4615605876394622042[20] = 0;
   out_4615605876394622042[21] = 0;
   out_4615605876394622042[22] = 0;
   out_4615605876394622042[23] = 0;
   out_4615605876394622042[24] = 0;
   out_4615605876394622042[25] = 0;
   out_4615605876394622042[26] = 0;
   out_4615605876394622042[27] = 0;
   out_4615605876394622042[28] = 0;
   out_4615605876394622042[29] = 0;
   out_4615605876394622042[30] = 0;
   out_4615605876394622042[31] = 0;
   out_4615605876394622042[32] = 0;
   out_4615605876394622042[33] = 1;
   out_4615605876394622042[34] = 0;
   out_4615605876394622042[35] = 0;
   out_4615605876394622042[36] = 0;
   out_4615605876394622042[37] = 0;
   out_4615605876394622042[38] = 0;
   out_4615605876394622042[39] = 0;
   out_4615605876394622042[40] = 0;
   out_4615605876394622042[41] = 0;
   out_4615605876394622042[42] = 0;
   out_4615605876394622042[43] = 0;
   out_4615605876394622042[44] = 0;
   out_4615605876394622042[45] = 0;
   out_4615605876394622042[46] = 0;
   out_4615605876394622042[47] = 0;
   out_4615605876394622042[48] = 0;
   out_4615605876394622042[49] = 0;
   out_4615605876394622042[50] = 0;
   out_4615605876394622042[51] = 0;
   out_4615605876394622042[52] = 0;
   out_4615605876394622042[53] = 0;
   out_4615605876394622042[54] = 0;
   out_4615605876394622042[55] = 0;
   out_4615605876394622042[56] = 1;
   out_4615605876394622042[57] = 0;
   out_4615605876394622042[58] = 0;
   out_4615605876394622042[59] = 0;
   out_4615605876394622042[60] = 0;
   out_4615605876394622042[61] = 0;
   out_4615605876394622042[62] = 0;
   out_4615605876394622042[63] = 0;
   out_4615605876394622042[64] = 0;
   out_4615605876394622042[65] = 0;
}
void h_33(double *state, double *unused, double *out_94860468803305584) {
   out_94860468803305584[0] = state[16];
   out_94860468803305584[1] = state[17];
   out_94860468803305584[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1660423538987252293) {
   out_1660423538987252293[0] = 0;
   out_1660423538987252293[1] = 0;
   out_1660423538987252293[2] = 0;
   out_1660423538987252293[3] = 0;
   out_1660423538987252293[4] = 0;
   out_1660423538987252293[5] = 0;
   out_1660423538987252293[6] = 0;
   out_1660423538987252293[7] = 0;
   out_1660423538987252293[8] = 0;
   out_1660423538987252293[9] = 0;
   out_1660423538987252293[10] = 0;
   out_1660423538987252293[11] = 0;
   out_1660423538987252293[12] = 0;
   out_1660423538987252293[13] = 0;
   out_1660423538987252293[14] = 0;
   out_1660423538987252293[15] = 0;
   out_1660423538987252293[16] = 1;
   out_1660423538987252293[17] = 0;
   out_1660423538987252293[18] = 0;
   out_1660423538987252293[19] = 0;
   out_1660423538987252293[20] = 0;
   out_1660423538987252293[21] = 0;
   out_1660423538987252293[22] = 0;
   out_1660423538987252293[23] = 0;
   out_1660423538987252293[24] = 0;
   out_1660423538987252293[25] = 0;
   out_1660423538987252293[26] = 0;
   out_1660423538987252293[27] = 0;
   out_1660423538987252293[28] = 0;
   out_1660423538987252293[29] = 0;
   out_1660423538987252293[30] = 0;
   out_1660423538987252293[31] = 0;
   out_1660423538987252293[32] = 0;
   out_1660423538987252293[33] = 0;
   out_1660423538987252293[34] = 0;
   out_1660423538987252293[35] = 0;
   out_1660423538987252293[36] = 0;
   out_1660423538987252293[37] = 0;
   out_1660423538987252293[38] = 0;
   out_1660423538987252293[39] = 1;
   out_1660423538987252293[40] = 0;
   out_1660423538987252293[41] = 0;
   out_1660423538987252293[42] = 0;
   out_1660423538987252293[43] = 0;
   out_1660423538987252293[44] = 0;
   out_1660423538987252293[45] = 0;
   out_1660423538987252293[46] = 0;
   out_1660423538987252293[47] = 0;
   out_1660423538987252293[48] = 0;
   out_1660423538987252293[49] = 0;
   out_1660423538987252293[50] = 0;
   out_1660423538987252293[51] = 0;
   out_1660423538987252293[52] = 0;
   out_1660423538987252293[53] = 0;
   out_1660423538987252293[54] = 0;
   out_1660423538987252293[55] = 0;
   out_1660423538987252293[56] = 0;
   out_1660423538987252293[57] = 0;
   out_1660423538987252293[58] = 0;
   out_1660423538987252293[59] = 0;
   out_1660423538987252293[60] = 0;
   out_1660423538987252293[61] = 0;
   out_1660423538987252293[62] = 1;
   out_1660423538987252293[63] = 0;
   out_1660423538987252293[64] = 0;
   out_1660423538987252293[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7205501426539971812) {
  H(in_vec, out_7205501426539971812);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1555093519000958624) {
  err_fun(nom_x, delta_x, out_1555093519000958624);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1096701756546611417) {
  inv_err_fun(nom_x, true_x, out_1096701756546611417);
}
void live_H_mod_fun(double *state, double *out_6616296833374728050) {
  H_mod_fun(state, out_6616296833374728050);
}
void live_f_fun(double *state, double dt, double *out_6507075395670953651) {
  f_fun(state,  dt, out_6507075395670953651);
}
void live_F_fun(double *state, double dt, double *out_5453224946131260124) {
  F_fun(state,  dt, out_5453224946131260124);
}
void live_h_4(double *state, double *unused, double *out_3132156196268012346) {
  h_4(state, unused, out_3132156196268012346);
}
void live_H_4(double *state, double *unused, double *out_6543919262050482104) {
  H_4(state, unused, out_6543919262050482104);
}
void live_h_9(double *state, double *unused, double *out_8022284431550274375) {
  h_9(state, unused, out_8022284431550274375);
}
void live_H_9(double *state, double *unused, double *out_4615605876394622042) {
  H_9(state, unused, out_4615605876394622042);
}
void live_h_10(double *state, double *unused, double *out_4436799979594737477) {
  h_10(state, unused, out_4436799979594737477);
}
void live_H_10(double *state, double *unused, double *out_8371397723930581723) {
  H_10(state, unused, out_8371397723930581723);
}
void live_h_12(double *state, double *unused, double *out_7103844377950211132) {
  h_12(state, unused, out_7103844377950211132);
}
void live_H_12(double *state, double *unused, double *out_162660885007749108) {
  H_12(state, unused, out_162660885007749108);
}
void live_h_35(double *state, double *unused, double *out_1432532744458843692) {
  h_35(state, unused, out_1432532744458843692);
}
void live_H_35(double *state, double *unused, double *out_8536162754286462136) {
  H_35(state, unused, out_8536162754286462136);
}
void live_h_32(double *state, double *unused, double *out_4823252678340872667) {
  h_32(state, unused, out_4823252678340872667);
}
void live_H_32(double *state, double *unused, double *out_725493059512098844) {
  H_32(state, unused, out_725493059512098844);
}
void live_h_13(double *state, double *unused, double *out_8481883597513449564) {
  h_13(state, unused, out_8481883597513449564);
}
void live_H_13(double *state, double *unused, double *out_2835464733233782812) {
  H_13(state, unused, out_2835464733233782812);
}
void live_h_14(double *state, double *unused, double *out_8022284431550274375) {
  h_14(state, unused, out_8022284431550274375);
}
void live_H_14(double *state, double *unused, double *out_4615605876394622042) {
  H_14(state, unused, out_4615605876394622042);
}
void live_h_33(double *state, double *unused, double *out_94860468803305584) {
  h_33(state, unused, out_94860468803305584);
}
void live_H_33(double *state, double *unused, double *out_1660423538987252293) {
  H_33(state, unused, out_1660423538987252293);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
