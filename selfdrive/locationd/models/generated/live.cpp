#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3808281942058314825) {
   out_3808281942058314825[0] = 0;
   out_3808281942058314825[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3808281942058314825[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3808281942058314825[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3808281942058314825[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3808281942058314825[5] = -sin(in_vec[1]);
   out_3808281942058314825[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3808281942058314825[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3808281942058314825[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3808281942058314825[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3808281942058314825[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3808281942058314825[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3808281942058314825[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3808281942058314825[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3808281942058314825[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3808281942058314825[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3808281942058314825[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3808281942058314825[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8984552048392289771) {
   out_8984552048392289771[0] = delta_x[0] + nom_x[0];
   out_8984552048392289771[1] = delta_x[1] + nom_x[1];
   out_8984552048392289771[2] = delta_x[2] + nom_x[2];
   out_8984552048392289771[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8984552048392289771[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8984552048392289771[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8984552048392289771[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8984552048392289771[7] = delta_x[6] + nom_x[7];
   out_8984552048392289771[8] = delta_x[7] + nom_x[8];
   out_8984552048392289771[9] = delta_x[8] + nom_x[9];
   out_8984552048392289771[10] = delta_x[9] + nom_x[10];
   out_8984552048392289771[11] = delta_x[10] + nom_x[11];
   out_8984552048392289771[12] = delta_x[11] + nom_x[12];
   out_8984552048392289771[13] = delta_x[12] + nom_x[13];
   out_8984552048392289771[14] = delta_x[13] + nom_x[14];
   out_8984552048392289771[15] = delta_x[14] + nom_x[15];
   out_8984552048392289771[16] = delta_x[15] + nom_x[16];
   out_8984552048392289771[17] = delta_x[16] + nom_x[17];
   out_8984552048392289771[18] = delta_x[17] + nom_x[18];
   out_8984552048392289771[19] = delta_x[18] + nom_x[19];
   out_8984552048392289771[20] = delta_x[19] + nom_x[20];
   out_8984552048392289771[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5876474152572794163) {
   out_5876474152572794163[0] = -nom_x[0] + true_x[0];
   out_5876474152572794163[1] = -nom_x[1] + true_x[1];
   out_5876474152572794163[2] = -nom_x[2] + true_x[2];
   out_5876474152572794163[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5876474152572794163[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5876474152572794163[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5876474152572794163[6] = -nom_x[7] + true_x[7];
   out_5876474152572794163[7] = -nom_x[8] + true_x[8];
   out_5876474152572794163[8] = -nom_x[9] + true_x[9];
   out_5876474152572794163[9] = -nom_x[10] + true_x[10];
   out_5876474152572794163[10] = -nom_x[11] + true_x[11];
   out_5876474152572794163[11] = -nom_x[12] + true_x[12];
   out_5876474152572794163[12] = -nom_x[13] + true_x[13];
   out_5876474152572794163[13] = -nom_x[14] + true_x[14];
   out_5876474152572794163[14] = -nom_x[15] + true_x[15];
   out_5876474152572794163[15] = -nom_x[16] + true_x[16];
   out_5876474152572794163[16] = -nom_x[17] + true_x[17];
   out_5876474152572794163[17] = -nom_x[18] + true_x[18];
   out_5876474152572794163[18] = -nom_x[19] + true_x[19];
   out_5876474152572794163[19] = -nom_x[20] + true_x[20];
   out_5876474152572794163[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6523588885555635776) {
   out_6523588885555635776[0] = 1.0;
   out_6523588885555635776[1] = 0;
   out_6523588885555635776[2] = 0;
   out_6523588885555635776[3] = 0;
   out_6523588885555635776[4] = 0;
   out_6523588885555635776[5] = 0;
   out_6523588885555635776[6] = 0;
   out_6523588885555635776[7] = 0;
   out_6523588885555635776[8] = 0;
   out_6523588885555635776[9] = 0;
   out_6523588885555635776[10] = 0;
   out_6523588885555635776[11] = 0;
   out_6523588885555635776[12] = 0;
   out_6523588885555635776[13] = 0;
   out_6523588885555635776[14] = 0;
   out_6523588885555635776[15] = 0;
   out_6523588885555635776[16] = 0;
   out_6523588885555635776[17] = 0;
   out_6523588885555635776[18] = 0;
   out_6523588885555635776[19] = 0;
   out_6523588885555635776[20] = 0;
   out_6523588885555635776[21] = 0;
   out_6523588885555635776[22] = 1.0;
   out_6523588885555635776[23] = 0;
   out_6523588885555635776[24] = 0;
   out_6523588885555635776[25] = 0;
   out_6523588885555635776[26] = 0;
   out_6523588885555635776[27] = 0;
   out_6523588885555635776[28] = 0;
   out_6523588885555635776[29] = 0;
   out_6523588885555635776[30] = 0;
   out_6523588885555635776[31] = 0;
   out_6523588885555635776[32] = 0;
   out_6523588885555635776[33] = 0;
   out_6523588885555635776[34] = 0;
   out_6523588885555635776[35] = 0;
   out_6523588885555635776[36] = 0;
   out_6523588885555635776[37] = 0;
   out_6523588885555635776[38] = 0;
   out_6523588885555635776[39] = 0;
   out_6523588885555635776[40] = 0;
   out_6523588885555635776[41] = 0;
   out_6523588885555635776[42] = 0;
   out_6523588885555635776[43] = 0;
   out_6523588885555635776[44] = 1.0;
   out_6523588885555635776[45] = 0;
   out_6523588885555635776[46] = 0;
   out_6523588885555635776[47] = 0;
   out_6523588885555635776[48] = 0;
   out_6523588885555635776[49] = 0;
   out_6523588885555635776[50] = 0;
   out_6523588885555635776[51] = 0;
   out_6523588885555635776[52] = 0;
   out_6523588885555635776[53] = 0;
   out_6523588885555635776[54] = 0;
   out_6523588885555635776[55] = 0;
   out_6523588885555635776[56] = 0;
   out_6523588885555635776[57] = 0;
   out_6523588885555635776[58] = 0;
   out_6523588885555635776[59] = 0;
   out_6523588885555635776[60] = 0;
   out_6523588885555635776[61] = 0;
   out_6523588885555635776[62] = 0;
   out_6523588885555635776[63] = 0;
   out_6523588885555635776[64] = 0;
   out_6523588885555635776[65] = 0;
   out_6523588885555635776[66] = -0.5*state[4];
   out_6523588885555635776[67] = -0.5*state[5];
   out_6523588885555635776[68] = -0.5*state[6];
   out_6523588885555635776[69] = 0;
   out_6523588885555635776[70] = 0;
   out_6523588885555635776[71] = 0;
   out_6523588885555635776[72] = 0;
   out_6523588885555635776[73] = 0;
   out_6523588885555635776[74] = 0;
   out_6523588885555635776[75] = 0;
   out_6523588885555635776[76] = 0;
   out_6523588885555635776[77] = 0;
   out_6523588885555635776[78] = 0;
   out_6523588885555635776[79] = 0;
   out_6523588885555635776[80] = 0;
   out_6523588885555635776[81] = 0;
   out_6523588885555635776[82] = 0;
   out_6523588885555635776[83] = 0;
   out_6523588885555635776[84] = 0;
   out_6523588885555635776[85] = 0;
   out_6523588885555635776[86] = 0;
   out_6523588885555635776[87] = 0.5*state[3];
   out_6523588885555635776[88] = 0.5*state[6];
   out_6523588885555635776[89] = -0.5*state[5];
   out_6523588885555635776[90] = 0;
   out_6523588885555635776[91] = 0;
   out_6523588885555635776[92] = 0;
   out_6523588885555635776[93] = 0;
   out_6523588885555635776[94] = 0;
   out_6523588885555635776[95] = 0;
   out_6523588885555635776[96] = 0;
   out_6523588885555635776[97] = 0;
   out_6523588885555635776[98] = 0;
   out_6523588885555635776[99] = 0;
   out_6523588885555635776[100] = 0;
   out_6523588885555635776[101] = 0;
   out_6523588885555635776[102] = 0;
   out_6523588885555635776[103] = 0;
   out_6523588885555635776[104] = 0;
   out_6523588885555635776[105] = 0;
   out_6523588885555635776[106] = 0;
   out_6523588885555635776[107] = 0;
   out_6523588885555635776[108] = -0.5*state[6];
   out_6523588885555635776[109] = 0.5*state[3];
   out_6523588885555635776[110] = 0.5*state[4];
   out_6523588885555635776[111] = 0;
   out_6523588885555635776[112] = 0;
   out_6523588885555635776[113] = 0;
   out_6523588885555635776[114] = 0;
   out_6523588885555635776[115] = 0;
   out_6523588885555635776[116] = 0;
   out_6523588885555635776[117] = 0;
   out_6523588885555635776[118] = 0;
   out_6523588885555635776[119] = 0;
   out_6523588885555635776[120] = 0;
   out_6523588885555635776[121] = 0;
   out_6523588885555635776[122] = 0;
   out_6523588885555635776[123] = 0;
   out_6523588885555635776[124] = 0;
   out_6523588885555635776[125] = 0;
   out_6523588885555635776[126] = 0;
   out_6523588885555635776[127] = 0;
   out_6523588885555635776[128] = 0;
   out_6523588885555635776[129] = 0.5*state[5];
   out_6523588885555635776[130] = -0.5*state[4];
   out_6523588885555635776[131] = 0.5*state[3];
   out_6523588885555635776[132] = 0;
   out_6523588885555635776[133] = 0;
   out_6523588885555635776[134] = 0;
   out_6523588885555635776[135] = 0;
   out_6523588885555635776[136] = 0;
   out_6523588885555635776[137] = 0;
   out_6523588885555635776[138] = 0;
   out_6523588885555635776[139] = 0;
   out_6523588885555635776[140] = 0;
   out_6523588885555635776[141] = 0;
   out_6523588885555635776[142] = 0;
   out_6523588885555635776[143] = 0;
   out_6523588885555635776[144] = 0;
   out_6523588885555635776[145] = 0;
   out_6523588885555635776[146] = 0;
   out_6523588885555635776[147] = 0;
   out_6523588885555635776[148] = 0;
   out_6523588885555635776[149] = 0;
   out_6523588885555635776[150] = 0;
   out_6523588885555635776[151] = 0;
   out_6523588885555635776[152] = 0;
   out_6523588885555635776[153] = 1.0;
   out_6523588885555635776[154] = 0;
   out_6523588885555635776[155] = 0;
   out_6523588885555635776[156] = 0;
   out_6523588885555635776[157] = 0;
   out_6523588885555635776[158] = 0;
   out_6523588885555635776[159] = 0;
   out_6523588885555635776[160] = 0;
   out_6523588885555635776[161] = 0;
   out_6523588885555635776[162] = 0;
   out_6523588885555635776[163] = 0;
   out_6523588885555635776[164] = 0;
   out_6523588885555635776[165] = 0;
   out_6523588885555635776[166] = 0;
   out_6523588885555635776[167] = 0;
   out_6523588885555635776[168] = 0;
   out_6523588885555635776[169] = 0;
   out_6523588885555635776[170] = 0;
   out_6523588885555635776[171] = 0;
   out_6523588885555635776[172] = 0;
   out_6523588885555635776[173] = 0;
   out_6523588885555635776[174] = 0;
   out_6523588885555635776[175] = 1.0;
   out_6523588885555635776[176] = 0;
   out_6523588885555635776[177] = 0;
   out_6523588885555635776[178] = 0;
   out_6523588885555635776[179] = 0;
   out_6523588885555635776[180] = 0;
   out_6523588885555635776[181] = 0;
   out_6523588885555635776[182] = 0;
   out_6523588885555635776[183] = 0;
   out_6523588885555635776[184] = 0;
   out_6523588885555635776[185] = 0;
   out_6523588885555635776[186] = 0;
   out_6523588885555635776[187] = 0;
   out_6523588885555635776[188] = 0;
   out_6523588885555635776[189] = 0;
   out_6523588885555635776[190] = 0;
   out_6523588885555635776[191] = 0;
   out_6523588885555635776[192] = 0;
   out_6523588885555635776[193] = 0;
   out_6523588885555635776[194] = 0;
   out_6523588885555635776[195] = 0;
   out_6523588885555635776[196] = 0;
   out_6523588885555635776[197] = 1.0;
   out_6523588885555635776[198] = 0;
   out_6523588885555635776[199] = 0;
   out_6523588885555635776[200] = 0;
   out_6523588885555635776[201] = 0;
   out_6523588885555635776[202] = 0;
   out_6523588885555635776[203] = 0;
   out_6523588885555635776[204] = 0;
   out_6523588885555635776[205] = 0;
   out_6523588885555635776[206] = 0;
   out_6523588885555635776[207] = 0;
   out_6523588885555635776[208] = 0;
   out_6523588885555635776[209] = 0;
   out_6523588885555635776[210] = 0;
   out_6523588885555635776[211] = 0;
   out_6523588885555635776[212] = 0;
   out_6523588885555635776[213] = 0;
   out_6523588885555635776[214] = 0;
   out_6523588885555635776[215] = 0;
   out_6523588885555635776[216] = 0;
   out_6523588885555635776[217] = 0;
   out_6523588885555635776[218] = 0;
   out_6523588885555635776[219] = 1.0;
   out_6523588885555635776[220] = 0;
   out_6523588885555635776[221] = 0;
   out_6523588885555635776[222] = 0;
   out_6523588885555635776[223] = 0;
   out_6523588885555635776[224] = 0;
   out_6523588885555635776[225] = 0;
   out_6523588885555635776[226] = 0;
   out_6523588885555635776[227] = 0;
   out_6523588885555635776[228] = 0;
   out_6523588885555635776[229] = 0;
   out_6523588885555635776[230] = 0;
   out_6523588885555635776[231] = 0;
   out_6523588885555635776[232] = 0;
   out_6523588885555635776[233] = 0;
   out_6523588885555635776[234] = 0;
   out_6523588885555635776[235] = 0;
   out_6523588885555635776[236] = 0;
   out_6523588885555635776[237] = 0;
   out_6523588885555635776[238] = 0;
   out_6523588885555635776[239] = 0;
   out_6523588885555635776[240] = 0;
   out_6523588885555635776[241] = 1.0;
   out_6523588885555635776[242] = 0;
   out_6523588885555635776[243] = 0;
   out_6523588885555635776[244] = 0;
   out_6523588885555635776[245] = 0;
   out_6523588885555635776[246] = 0;
   out_6523588885555635776[247] = 0;
   out_6523588885555635776[248] = 0;
   out_6523588885555635776[249] = 0;
   out_6523588885555635776[250] = 0;
   out_6523588885555635776[251] = 0;
   out_6523588885555635776[252] = 0;
   out_6523588885555635776[253] = 0;
   out_6523588885555635776[254] = 0;
   out_6523588885555635776[255] = 0;
   out_6523588885555635776[256] = 0;
   out_6523588885555635776[257] = 0;
   out_6523588885555635776[258] = 0;
   out_6523588885555635776[259] = 0;
   out_6523588885555635776[260] = 0;
   out_6523588885555635776[261] = 0;
   out_6523588885555635776[262] = 0;
   out_6523588885555635776[263] = 1.0;
   out_6523588885555635776[264] = 0;
   out_6523588885555635776[265] = 0;
   out_6523588885555635776[266] = 0;
   out_6523588885555635776[267] = 0;
   out_6523588885555635776[268] = 0;
   out_6523588885555635776[269] = 0;
   out_6523588885555635776[270] = 0;
   out_6523588885555635776[271] = 0;
   out_6523588885555635776[272] = 0;
   out_6523588885555635776[273] = 0;
   out_6523588885555635776[274] = 0;
   out_6523588885555635776[275] = 0;
   out_6523588885555635776[276] = 0;
   out_6523588885555635776[277] = 0;
   out_6523588885555635776[278] = 0;
   out_6523588885555635776[279] = 0;
   out_6523588885555635776[280] = 0;
   out_6523588885555635776[281] = 0;
   out_6523588885555635776[282] = 0;
   out_6523588885555635776[283] = 0;
   out_6523588885555635776[284] = 0;
   out_6523588885555635776[285] = 1.0;
   out_6523588885555635776[286] = 0;
   out_6523588885555635776[287] = 0;
   out_6523588885555635776[288] = 0;
   out_6523588885555635776[289] = 0;
   out_6523588885555635776[290] = 0;
   out_6523588885555635776[291] = 0;
   out_6523588885555635776[292] = 0;
   out_6523588885555635776[293] = 0;
   out_6523588885555635776[294] = 0;
   out_6523588885555635776[295] = 0;
   out_6523588885555635776[296] = 0;
   out_6523588885555635776[297] = 0;
   out_6523588885555635776[298] = 0;
   out_6523588885555635776[299] = 0;
   out_6523588885555635776[300] = 0;
   out_6523588885555635776[301] = 0;
   out_6523588885555635776[302] = 0;
   out_6523588885555635776[303] = 0;
   out_6523588885555635776[304] = 0;
   out_6523588885555635776[305] = 0;
   out_6523588885555635776[306] = 0;
   out_6523588885555635776[307] = 1.0;
   out_6523588885555635776[308] = 0;
   out_6523588885555635776[309] = 0;
   out_6523588885555635776[310] = 0;
   out_6523588885555635776[311] = 0;
   out_6523588885555635776[312] = 0;
   out_6523588885555635776[313] = 0;
   out_6523588885555635776[314] = 0;
   out_6523588885555635776[315] = 0;
   out_6523588885555635776[316] = 0;
   out_6523588885555635776[317] = 0;
   out_6523588885555635776[318] = 0;
   out_6523588885555635776[319] = 0;
   out_6523588885555635776[320] = 0;
   out_6523588885555635776[321] = 0;
   out_6523588885555635776[322] = 0;
   out_6523588885555635776[323] = 0;
   out_6523588885555635776[324] = 0;
   out_6523588885555635776[325] = 0;
   out_6523588885555635776[326] = 0;
   out_6523588885555635776[327] = 0;
   out_6523588885555635776[328] = 0;
   out_6523588885555635776[329] = 1.0;
   out_6523588885555635776[330] = 0;
   out_6523588885555635776[331] = 0;
   out_6523588885555635776[332] = 0;
   out_6523588885555635776[333] = 0;
   out_6523588885555635776[334] = 0;
   out_6523588885555635776[335] = 0;
   out_6523588885555635776[336] = 0;
   out_6523588885555635776[337] = 0;
   out_6523588885555635776[338] = 0;
   out_6523588885555635776[339] = 0;
   out_6523588885555635776[340] = 0;
   out_6523588885555635776[341] = 0;
   out_6523588885555635776[342] = 0;
   out_6523588885555635776[343] = 0;
   out_6523588885555635776[344] = 0;
   out_6523588885555635776[345] = 0;
   out_6523588885555635776[346] = 0;
   out_6523588885555635776[347] = 0;
   out_6523588885555635776[348] = 0;
   out_6523588885555635776[349] = 0;
   out_6523588885555635776[350] = 0;
   out_6523588885555635776[351] = 1.0;
   out_6523588885555635776[352] = 0;
   out_6523588885555635776[353] = 0;
   out_6523588885555635776[354] = 0;
   out_6523588885555635776[355] = 0;
   out_6523588885555635776[356] = 0;
   out_6523588885555635776[357] = 0;
   out_6523588885555635776[358] = 0;
   out_6523588885555635776[359] = 0;
   out_6523588885555635776[360] = 0;
   out_6523588885555635776[361] = 0;
   out_6523588885555635776[362] = 0;
   out_6523588885555635776[363] = 0;
   out_6523588885555635776[364] = 0;
   out_6523588885555635776[365] = 0;
   out_6523588885555635776[366] = 0;
   out_6523588885555635776[367] = 0;
   out_6523588885555635776[368] = 0;
   out_6523588885555635776[369] = 0;
   out_6523588885555635776[370] = 0;
   out_6523588885555635776[371] = 0;
   out_6523588885555635776[372] = 0;
   out_6523588885555635776[373] = 1.0;
   out_6523588885555635776[374] = 0;
   out_6523588885555635776[375] = 0;
   out_6523588885555635776[376] = 0;
   out_6523588885555635776[377] = 0;
   out_6523588885555635776[378] = 0;
   out_6523588885555635776[379] = 0;
   out_6523588885555635776[380] = 0;
   out_6523588885555635776[381] = 0;
   out_6523588885555635776[382] = 0;
   out_6523588885555635776[383] = 0;
   out_6523588885555635776[384] = 0;
   out_6523588885555635776[385] = 0;
   out_6523588885555635776[386] = 0;
   out_6523588885555635776[387] = 0;
   out_6523588885555635776[388] = 0;
   out_6523588885555635776[389] = 0;
   out_6523588885555635776[390] = 0;
   out_6523588885555635776[391] = 0;
   out_6523588885555635776[392] = 0;
   out_6523588885555635776[393] = 0;
   out_6523588885555635776[394] = 0;
   out_6523588885555635776[395] = 1.0;
   out_6523588885555635776[396] = 0;
   out_6523588885555635776[397] = 0;
   out_6523588885555635776[398] = 0;
   out_6523588885555635776[399] = 0;
   out_6523588885555635776[400] = 0;
   out_6523588885555635776[401] = 0;
   out_6523588885555635776[402] = 0;
   out_6523588885555635776[403] = 0;
   out_6523588885555635776[404] = 0;
   out_6523588885555635776[405] = 0;
   out_6523588885555635776[406] = 0;
   out_6523588885555635776[407] = 0;
   out_6523588885555635776[408] = 0;
   out_6523588885555635776[409] = 0;
   out_6523588885555635776[410] = 0;
   out_6523588885555635776[411] = 0;
   out_6523588885555635776[412] = 0;
   out_6523588885555635776[413] = 0;
   out_6523588885555635776[414] = 0;
   out_6523588885555635776[415] = 0;
   out_6523588885555635776[416] = 0;
   out_6523588885555635776[417] = 1.0;
   out_6523588885555635776[418] = 0;
   out_6523588885555635776[419] = 0;
   out_6523588885555635776[420] = 0;
   out_6523588885555635776[421] = 0;
   out_6523588885555635776[422] = 0;
   out_6523588885555635776[423] = 0;
   out_6523588885555635776[424] = 0;
   out_6523588885555635776[425] = 0;
   out_6523588885555635776[426] = 0;
   out_6523588885555635776[427] = 0;
   out_6523588885555635776[428] = 0;
   out_6523588885555635776[429] = 0;
   out_6523588885555635776[430] = 0;
   out_6523588885555635776[431] = 0;
   out_6523588885555635776[432] = 0;
   out_6523588885555635776[433] = 0;
   out_6523588885555635776[434] = 0;
   out_6523588885555635776[435] = 0;
   out_6523588885555635776[436] = 0;
   out_6523588885555635776[437] = 0;
   out_6523588885555635776[438] = 0;
   out_6523588885555635776[439] = 1.0;
   out_6523588885555635776[440] = 0;
   out_6523588885555635776[441] = 0;
   out_6523588885555635776[442] = 0;
   out_6523588885555635776[443] = 0;
   out_6523588885555635776[444] = 0;
   out_6523588885555635776[445] = 0;
   out_6523588885555635776[446] = 0;
   out_6523588885555635776[447] = 0;
   out_6523588885555635776[448] = 0;
   out_6523588885555635776[449] = 0;
   out_6523588885555635776[450] = 0;
   out_6523588885555635776[451] = 0;
   out_6523588885555635776[452] = 0;
   out_6523588885555635776[453] = 0;
   out_6523588885555635776[454] = 0;
   out_6523588885555635776[455] = 0;
   out_6523588885555635776[456] = 0;
   out_6523588885555635776[457] = 0;
   out_6523588885555635776[458] = 0;
   out_6523588885555635776[459] = 0;
   out_6523588885555635776[460] = 0;
   out_6523588885555635776[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4217369493126296336) {
   out_4217369493126296336[0] = dt*state[7] + state[0];
   out_4217369493126296336[1] = dt*state[8] + state[1];
   out_4217369493126296336[2] = dt*state[9] + state[2];
   out_4217369493126296336[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4217369493126296336[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4217369493126296336[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4217369493126296336[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4217369493126296336[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4217369493126296336[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4217369493126296336[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4217369493126296336[10] = state[10];
   out_4217369493126296336[11] = state[11];
   out_4217369493126296336[12] = state[12];
   out_4217369493126296336[13] = state[13];
   out_4217369493126296336[14] = state[14];
   out_4217369493126296336[15] = state[15];
   out_4217369493126296336[16] = state[16];
   out_4217369493126296336[17] = state[17];
   out_4217369493126296336[18] = state[18];
   out_4217369493126296336[19] = state[19];
   out_4217369493126296336[20] = state[20];
   out_4217369493126296336[21] = state[21];
}
void F_fun(double *state, double dt, double *out_9146061074980949392) {
   out_9146061074980949392[0] = 1;
   out_9146061074980949392[1] = 0;
   out_9146061074980949392[2] = 0;
   out_9146061074980949392[3] = 0;
   out_9146061074980949392[4] = 0;
   out_9146061074980949392[5] = 0;
   out_9146061074980949392[6] = dt;
   out_9146061074980949392[7] = 0;
   out_9146061074980949392[8] = 0;
   out_9146061074980949392[9] = 0;
   out_9146061074980949392[10] = 0;
   out_9146061074980949392[11] = 0;
   out_9146061074980949392[12] = 0;
   out_9146061074980949392[13] = 0;
   out_9146061074980949392[14] = 0;
   out_9146061074980949392[15] = 0;
   out_9146061074980949392[16] = 0;
   out_9146061074980949392[17] = 0;
   out_9146061074980949392[18] = 0;
   out_9146061074980949392[19] = 0;
   out_9146061074980949392[20] = 0;
   out_9146061074980949392[21] = 0;
   out_9146061074980949392[22] = 1;
   out_9146061074980949392[23] = 0;
   out_9146061074980949392[24] = 0;
   out_9146061074980949392[25] = 0;
   out_9146061074980949392[26] = 0;
   out_9146061074980949392[27] = 0;
   out_9146061074980949392[28] = dt;
   out_9146061074980949392[29] = 0;
   out_9146061074980949392[30] = 0;
   out_9146061074980949392[31] = 0;
   out_9146061074980949392[32] = 0;
   out_9146061074980949392[33] = 0;
   out_9146061074980949392[34] = 0;
   out_9146061074980949392[35] = 0;
   out_9146061074980949392[36] = 0;
   out_9146061074980949392[37] = 0;
   out_9146061074980949392[38] = 0;
   out_9146061074980949392[39] = 0;
   out_9146061074980949392[40] = 0;
   out_9146061074980949392[41] = 0;
   out_9146061074980949392[42] = 0;
   out_9146061074980949392[43] = 0;
   out_9146061074980949392[44] = 1;
   out_9146061074980949392[45] = 0;
   out_9146061074980949392[46] = 0;
   out_9146061074980949392[47] = 0;
   out_9146061074980949392[48] = 0;
   out_9146061074980949392[49] = 0;
   out_9146061074980949392[50] = dt;
   out_9146061074980949392[51] = 0;
   out_9146061074980949392[52] = 0;
   out_9146061074980949392[53] = 0;
   out_9146061074980949392[54] = 0;
   out_9146061074980949392[55] = 0;
   out_9146061074980949392[56] = 0;
   out_9146061074980949392[57] = 0;
   out_9146061074980949392[58] = 0;
   out_9146061074980949392[59] = 0;
   out_9146061074980949392[60] = 0;
   out_9146061074980949392[61] = 0;
   out_9146061074980949392[62] = 0;
   out_9146061074980949392[63] = 0;
   out_9146061074980949392[64] = 0;
   out_9146061074980949392[65] = 0;
   out_9146061074980949392[66] = 1;
   out_9146061074980949392[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9146061074980949392[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_9146061074980949392[69] = 0;
   out_9146061074980949392[70] = 0;
   out_9146061074980949392[71] = 0;
   out_9146061074980949392[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9146061074980949392[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9146061074980949392[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9146061074980949392[75] = 0;
   out_9146061074980949392[76] = 0;
   out_9146061074980949392[77] = 0;
   out_9146061074980949392[78] = 0;
   out_9146061074980949392[79] = 0;
   out_9146061074980949392[80] = 0;
   out_9146061074980949392[81] = 0;
   out_9146061074980949392[82] = 0;
   out_9146061074980949392[83] = 0;
   out_9146061074980949392[84] = 0;
   out_9146061074980949392[85] = 0;
   out_9146061074980949392[86] = 0;
   out_9146061074980949392[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9146061074980949392[88] = 1;
   out_9146061074980949392[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_9146061074980949392[90] = 0;
   out_9146061074980949392[91] = 0;
   out_9146061074980949392[92] = 0;
   out_9146061074980949392[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9146061074980949392[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9146061074980949392[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9146061074980949392[96] = 0;
   out_9146061074980949392[97] = 0;
   out_9146061074980949392[98] = 0;
   out_9146061074980949392[99] = 0;
   out_9146061074980949392[100] = 0;
   out_9146061074980949392[101] = 0;
   out_9146061074980949392[102] = 0;
   out_9146061074980949392[103] = 0;
   out_9146061074980949392[104] = 0;
   out_9146061074980949392[105] = 0;
   out_9146061074980949392[106] = 0;
   out_9146061074980949392[107] = 0;
   out_9146061074980949392[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_9146061074980949392[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_9146061074980949392[110] = 1;
   out_9146061074980949392[111] = 0;
   out_9146061074980949392[112] = 0;
   out_9146061074980949392[113] = 0;
   out_9146061074980949392[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9146061074980949392[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9146061074980949392[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9146061074980949392[117] = 0;
   out_9146061074980949392[118] = 0;
   out_9146061074980949392[119] = 0;
   out_9146061074980949392[120] = 0;
   out_9146061074980949392[121] = 0;
   out_9146061074980949392[122] = 0;
   out_9146061074980949392[123] = 0;
   out_9146061074980949392[124] = 0;
   out_9146061074980949392[125] = 0;
   out_9146061074980949392[126] = 0;
   out_9146061074980949392[127] = 0;
   out_9146061074980949392[128] = 0;
   out_9146061074980949392[129] = 0;
   out_9146061074980949392[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9146061074980949392[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_9146061074980949392[132] = 1;
   out_9146061074980949392[133] = 0;
   out_9146061074980949392[134] = 0;
   out_9146061074980949392[135] = 0;
   out_9146061074980949392[136] = 0;
   out_9146061074980949392[137] = 0;
   out_9146061074980949392[138] = 0;
   out_9146061074980949392[139] = 0;
   out_9146061074980949392[140] = 0;
   out_9146061074980949392[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9146061074980949392[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9146061074980949392[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9146061074980949392[144] = 0;
   out_9146061074980949392[145] = 0;
   out_9146061074980949392[146] = 0;
   out_9146061074980949392[147] = 0;
   out_9146061074980949392[148] = 0;
   out_9146061074980949392[149] = 0;
   out_9146061074980949392[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9146061074980949392[151] = 0;
   out_9146061074980949392[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_9146061074980949392[153] = 0;
   out_9146061074980949392[154] = 1;
   out_9146061074980949392[155] = 0;
   out_9146061074980949392[156] = 0;
   out_9146061074980949392[157] = 0;
   out_9146061074980949392[158] = 0;
   out_9146061074980949392[159] = 0;
   out_9146061074980949392[160] = 0;
   out_9146061074980949392[161] = 0;
   out_9146061074980949392[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9146061074980949392[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9146061074980949392[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9146061074980949392[165] = 0;
   out_9146061074980949392[166] = 0;
   out_9146061074980949392[167] = 0;
   out_9146061074980949392[168] = 0;
   out_9146061074980949392[169] = 0;
   out_9146061074980949392[170] = 0;
   out_9146061074980949392[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_9146061074980949392[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_9146061074980949392[173] = 0;
   out_9146061074980949392[174] = 0;
   out_9146061074980949392[175] = 0;
   out_9146061074980949392[176] = 1;
   out_9146061074980949392[177] = 0;
   out_9146061074980949392[178] = 0;
   out_9146061074980949392[179] = 0;
   out_9146061074980949392[180] = 0;
   out_9146061074980949392[181] = 0;
   out_9146061074980949392[182] = 0;
   out_9146061074980949392[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9146061074980949392[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9146061074980949392[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9146061074980949392[186] = 0;
   out_9146061074980949392[187] = 0;
   out_9146061074980949392[188] = 0;
   out_9146061074980949392[189] = 0;
   out_9146061074980949392[190] = 0;
   out_9146061074980949392[191] = 0;
   out_9146061074980949392[192] = 0;
   out_9146061074980949392[193] = 0;
   out_9146061074980949392[194] = 0;
   out_9146061074980949392[195] = 0;
   out_9146061074980949392[196] = 0;
   out_9146061074980949392[197] = 0;
   out_9146061074980949392[198] = 1;
   out_9146061074980949392[199] = 0;
   out_9146061074980949392[200] = 0;
   out_9146061074980949392[201] = 0;
   out_9146061074980949392[202] = 0;
   out_9146061074980949392[203] = 0;
   out_9146061074980949392[204] = 0;
   out_9146061074980949392[205] = 0;
   out_9146061074980949392[206] = 0;
   out_9146061074980949392[207] = 0;
   out_9146061074980949392[208] = 0;
   out_9146061074980949392[209] = 0;
   out_9146061074980949392[210] = 0;
   out_9146061074980949392[211] = 0;
   out_9146061074980949392[212] = 0;
   out_9146061074980949392[213] = 0;
   out_9146061074980949392[214] = 0;
   out_9146061074980949392[215] = 0;
   out_9146061074980949392[216] = 0;
   out_9146061074980949392[217] = 0;
   out_9146061074980949392[218] = 0;
   out_9146061074980949392[219] = 0;
   out_9146061074980949392[220] = 1;
   out_9146061074980949392[221] = 0;
   out_9146061074980949392[222] = 0;
   out_9146061074980949392[223] = 0;
   out_9146061074980949392[224] = 0;
   out_9146061074980949392[225] = 0;
   out_9146061074980949392[226] = 0;
   out_9146061074980949392[227] = 0;
   out_9146061074980949392[228] = 0;
   out_9146061074980949392[229] = 0;
   out_9146061074980949392[230] = 0;
   out_9146061074980949392[231] = 0;
   out_9146061074980949392[232] = 0;
   out_9146061074980949392[233] = 0;
   out_9146061074980949392[234] = 0;
   out_9146061074980949392[235] = 0;
   out_9146061074980949392[236] = 0;
   out_9146061074980949392[237] = 0;
   out_9146061074980949392[238] = 0;
   out_9146061074980949392[239] = 0;
   out_9146061074980949392[240] = 0;
   out_9146061074980949392[241] = 0;
   out_9146061074980949392[242] = 1;
   out_9146061074980949392[243] = 0;
   out_9146061074980949392[244] = 0;
   out_9146061074980949392[245] = 0;
   out_9146061074980949392[246] = 0;
   out_9146061074980949392[247] = 0;
   out_9146061074980949392[248] = 0;
   out_9146061074980949392[249] = 0;
   out_9146061074980949392[250] = 0;
   out_9146061074980949392[251] = 0;
   out_9146061074980949392[252] = 0;
   out_9146061074980949392[253] = 0;
   out_9146061074980949392[254] = 0;
   out_9146061074980949392[255] = 0;
   out_9146061074980949392[256] = 0;
   out_9146061074980949392[257] = 0;
   out_9146061074980949392[258] = 0;
   out_9146061074980949392[259] = 0;
   out_9146061074980949392[260] = 0;
   out_9146061074980949392[261] = 0;
   out_9146061074980949392[262] = 0;
   out_9146061074980949392[263] = 0;
   out_9146061074980949392[264] = 1;
   out_9146061074980949392[265] = 0;
   out_9146061074980949392[266] = 0;
   out_9146061074980949392[267] = 0;
   out_9146061074980949392[268] = 0;
   out_9146061074980949392[269] = 0;
   out_9146061074980949392[270] = 0;
   out_9146061074980949392[271] = 0;
   out_9146061074980949392[272] = 0;
   out_9146061074980949392[273] = 0;
   out_9146061074980949392[274] = 0;
   out_9146061074980949392[275] = 0;
   out_9146061074980949392[276] = 0;
   out_9146061074980949392[277] = 0;
   out_9146061074980949392[278] = 0;
   out_9146061074980949392[279] = 0;
   out_9146061074980949392[280] = 0;
   out_9146061074980949392[281] = 0;
   out_9146061074980949392[282] = 0;
   out_9146061074980949392[283] = 0;
   out_9146061074980949392[284] = 0;
   out_9146061074980949392[285] = 0;
   out_9146061074980949392[286] = 1;
   out_9146061074980949392[287] = 0;
   out_9146061074980949392[288] = 0;
   out_9146061074980949392[289] = 0;
   out_9146061074980949392[290] = 0;
   out_9146061074980949392[291] = 0;
   out_9146061074980949392[292] = 0;
   out_9146061074980949392[293] = 0;
   out_9146061074980949392[294] = 0;
   out_9146061074980949392[295] = 0;
   out_9146061074980949392[296] = 0;
   out_9146061074980949392[297] = 0;
   out_9146061074980949392[298] = 0;
   out_9146061074980949392[299] = 0;
   out_9146061074980949392[300] = 0;
   out_9146061074980949392[301] = 0;
   out_9146061074980949392[302] = 0;
   out_9146061074980949392[303] = 0;
   out_9146061074980949392[304] = 0;
   out_9146061074980949392[305] = 0;
   out_9146061074980949392[306] = 0;
   out_9146061074980949392[307] = 0;
   out_9146061074980949392[308] = 1;
   out_9146061074980949392[309] = 0;
   out_9146061074980949392[310] = 0;
   out_9146061074980949392[311] = 0;
   out_9146061074980949392[312] = 0;
   out_9146061074980949392[313] = 0;
   out_9146061074980949392[314] = 0;
   out_9146061074980949392[315] = 0;
   out_9146061074980949392[316] = 0;
   out_9146061074980949392[317] = 0;
   out_9146061074980949392[318] = 0;
   out_9146061074980949392[319] = 0;
   out_9146061074980949392[320] = 0;
   out_9146061074980949392[321] = 0;
   out_9146061074980949392[322] = 0;
   out_9146061074980949392[323] = 0;
   out_9146061074980949392[324] = 0;
   out_9146061074980949392[325] = 0;
   out_9146061074980949392[326] = 0;
   out_9146061074980949392[327] = 0;
   out_9146061074980949392[328] = 0;
   out_9146061074980949392[329] = 0;
   out_9146061074980949392[330] = 1;
   out_9146061074980949392[331] = 0;
   out_9146061074980949392[332] = 0;
   out_9146061074980949392[333] = 0;
   out_9146061074980949392[334] = 0;
   out_9146061074980949392[335] = 0;
   out_9146061074980949392[336] = 0;
   out_9146061074980949392[337] = 0;
   out_9146061074980949392[338] = 0;
   out_9146061074980949392[339] = 0;
   out_9146061074980949392[340] = 0;
   out_9146061074980949392[341] = 0;
   out_9146061074980949392[342] = 0;
   out_9146061074980949392[343] = 0;
   out_9146061074980949392[344] = 0;
   out_9146061074980949392[345] = 0;
   out_9146061074980949392[346] = 0;
   out_9146061074980949392[347] = 0;
   out_9146061074980949392[348] = 0;
   out_9146061074980949392[349] = 0;
   out_9146061074980949392[350] = 0;
   out_9146061074980949392[351] = 0;
   out_9146061074980949392[352] = 1;
   out_9146061074980949392[353] = 0;
   out_9146061074980949392[354] = 0;
   out_9146061074980949392[355] = 0;
   out_9146061074980949392[356] = 0;
   out_9146061074980949392[357] = 0;
   out_9146061074980949392[358] = 0;
   out_9146061074980949392[359] = 0;
   out_9146061074980949392[360] = 0;
   out_9146061074980949392[361] = 0;
   out_9146061074980949392[362] = 0;
   out_9146061074980949392[363] = 0;
   out_9146061074980949392[364] = 0;
   out_9146061074980949392[365] = 0;
   out_9146061074980949392[366] = 0;
   out_9146061074980949392[367] = 0;
   out_9146061074980949392[368] = 0;
   out_9146061074980949392[369] = 0;
   out_9146061074980949392[370] = 0;
   out_9146061074980949392[371] = 0;
   out_9146061074980949392[372] = 0;
   out_9146061074980949392[373] = 0;
   out_9146061074980949392[374] = 1;
   out_9146061074980949392[375] = 0;
   out_9146061074980949392[376] = 0;
   out_9146061074980949392[377] = 0;
   out_9146061074980949392[378] = 0;
   out_9146061074980949392[379] = 0;
   out_9146061074980949392[380] = 0;
   out_9146061074980949392[381] = 0;
   out_9146061074980949392[382] = 0;
   out_9146061074980949392[383] = 0;
   out_9146061074980949392[384] = 0;
   out_9146061074980949392[385] = 0;
   out_9146061074980949392[386] = 0;
   out_9146061074980949392[387] = 0;
   out_9146061074980949392[388] = 0;
   out_9146061074980949392[389] = 0;
   out_9146061074980949392[390] = 0;
   out_9146061074980949392[391] = 0;
   out_9146061074980949392[392] = 0;
   out_9146061074980949392[393] = 0;
   out_9146061074980949392[394] = 0;
   out_9146061074980949392[395] = 0;
   out_9146061074980949392[396] = 1;
   out_9146061074980949392[397] = 0;
   out_9146061074980949392[398] = 0;
   out_9146061074980949392[399] = 0;
   out_9146061074980949392[400] = 0;
   out_9146061074980949392[401] = 0;
   out_9146061074980949392[402] = 0;
   out_9146061074980949392[403] = 0;
   out_9146061074980949392[404] = 0;
   out_9146061074980949392[405] = 0;
   out_9146061074980949392[406] = 0;
   out_9146061074980949392[407] = 0;
   out_9146061074980949392[408] = 0;
   out_9146061074980949392[409] = 0;
   out_9146061074980949392[410] = 0;
   out_9146061074980949392[411] = 0;
   out_9146061074980949392[412] = 0;
   out_9146061074980949392[413] = 0;
   out_9146061074980949392[414] = 0;
   out_9146061074980949392[415] = 0;
   out_9146061074980949392[416] = 0;
   out_9146061074980949392[417] = 0;
   out_9146061074980949392[418] = 1;
   out_9146061074980949392[419] = 0;
   out_9146061074980949392[420] = 0;
   out_9146061074980949392[421] = 0;
   out_9146061074980949392[422] = 0;
   out_9146061074980949392[423] = 0;
   out_9146061074980949392[424] = 0;
   out_9146061074980949392[425] = 0;
   out_9146061074980949392[426] = 0;
   out_9146061074980949392[427] = 0;
   out_9146061074980949392[428] = 0;
   out_9146061074980949392[429] = 0;
   out_9146061074980949392[430] = 0;
   out_9146061074980949392[431] = 0;
   out_9146061074980949392[432] = 0;
   out_9146061074980949392[433] = 0;
   out_9146061074980949392[434] = 0;
   out_9146061074980949392[435] = 0;
   out_9146061074980949392[436] = 0;
   out_9146061074980949392[437] = 0;
   out_9146061074980949392[438] = 0;
   out_9146061074980949392[439] = 0;
   out_9146061074980949392[440] = 1;
}
void h_4(double *state, double *unused, double *out_1136797301434087438) {
   out_1136797301434087438[0] = state[10] + state[13];
   out_1136797301434087438[1] = state[11] + state[14];
   out_1136797301434087438[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8295381386874667479) {
   out_8295381386874667479[0] = 0;
   out_8295381386874667479[1] = 0;
   out_8295381386874667479[2] = 0;
   out_8295381386874667479[3] = 0;
   out_8295381386874667479[4] = 0;
   out_8295381386874667479[5] = 0;
   out_8295381386874667479[6] = 0;
   out_8295381386874667479[7] = 0;
   out_8295381386874667479[8] = 0;
   out_8295381386874667479[9] = 0;
   out_8295381386874667479[10] = 1;
   out_8295381386874667479[11] = 0;
   out_8295381386874667479[12] = 0;
   out_8295381386874667479[13] = 1;
   out_8295381386874667479[14] = 0;
   out_8295381386874667479[15] = 0;
   out_8295381386874667479[16] = 0;
   out_8295381386874667479[17] = 0;
   out_8295381386874667479[18] = 0;
   out_8295381386874667479[19] = 0;
   out_8295381386874667479[20] = 0;
   out_8295381386874667479[21] = 0;
   out_8295381386874667479[22] = 0;
   out_8295381386874667479[23] = 0;
   out_8295381386874667479[24] = 0;
   out_8295381386874667479[25] = 0;
   out_8295381386874667479[26] = 0;
   out_8295381386874667479[27] = 0;
   out_8295381386874667479[28] = 0;
   out_8295381386874667479[29] = 0;
   out_8295381386874667479[30] = 0;
   out_8295381386874667479[31] = 0;
   out_8295381386874667479[32] = 0;
   out_8295381386874667479[33] = 1;
   out_8295381386874667479[34] = 0;
   out_8295381386874667479[35] = 0;
   out_8295381386874667479[36] = 1;
   out_8295381386874667479[37] = 0;
   out_8295381386874667479[38] = 0;
   out_8295381386874667479[39] = 0;
   out_8295381386874667479[40] = 0;
   out_8295381386874667479[41] = 0;
   out_8295381386874667479[42] = 0;
   out_8295381386874667479[43] = 0;
   out_8295381386874667479[44] = 0;
   out_8295381386874667479[45] = 0;
   out_8295381386874667479[46] = 0;
   out_8295381386874667479[47] = 0;
   out_8295381386874667479[48] = 0;
   out_8295381386874667479[49] = 0;
   out_8295381386874667479[50] = 0;
   out_8295381386874667479[51] = 0;
   out_8295381386874667479[52] = 0;
   out_8295381386874667479[53] = 0;
   out_8295381386874667479[54] = 0;
   out_8295381386874667479[55] = 0;
   out_8295381386874667479[56] = 1;
   out_8295381386874667479[57] = 0;
   out_8295381386874667479[58] = 0;
   out_8295381386874667479[59] = 1;
   out_8295381386874667479[60] = 0;
   out_8295381386874667479[61] = 0;
   out_8295381386874667479[62] = 0;
   out_8295381386874667479[63] = 0;
   out_8295381386874667479[64] = 0;
   out_8295381386874667479[65] = 0;
}
void h_9(double *state, double *unused, double *out_740781242842422661) {
   out_740781242842422661[0] = state[10];
   out_740781242842422661[1] = state[11];
   out_740781242842422661[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8536571033504258124) {
   out_8536571033504258124[0] = 0;
   out_8536571033504258124[1] = 0;
   out_8536571033504258124[2] = 0;
   out_8536571033504258124[3] = 0;
   out_8536571033504258124[4] = 0;
   out_8536571033504258124[5] = 0;
   out_8536571033504258124[6] = 0;
   out_8536571033504258124[7] = 0;
   out_8536571033504258124[8] = 0;
   out_8536571033504258124[9] = 0;
   out_8536571033504258124[10] = 1;
   out_8536571033504258124[11] = 0;
   out_8536571033504258124[12] = 0;
   out_8536571033504258124[13] = 0;
   out_8536571033504258124[14] = 0;
   out_8536571033504258124[15] = 0;
   out_8536571033504258124[16] = 0;
   out_8536571033504258124[17] = 0;
   out_8536571033504258124[18] = 0;
   out_8536571033504258124[19] = 0;
   out_8536571033504258124[20] = 0;
   out_8536571033504258124[21] = 0;
   out_8536571033504258124[22] = 0;
   out_8536571033504258124[23] = 0;
   out_8536571033504258124[24] = 0;
   out_8536571033504258124[25] = 0;
   out_8536571033504258124[26] = 0;
   out_8536571033504258124[27] = 0;
   out_8536571033504258124[28] = 0;
   out_8536571033504258124[29] = 0;
   out_8536571033504258124[30] = 0;
   out_8536571033504258124[31] = 0;
   out_8536571033504258124[32] = 0;
   out_8536571033504258124[33] = 1;
   out_8536571033504258124[34] = 0;
   out_8536571033504258124[35] = 0;
   out_8536571033504258124[36] = 0;
   out_8536571033504258124[37] = 0;
   out_8536571033504258124[38] = 0;
   out_8536571033504258124[39] = 0;
   out_8536571033504258124[40] = 0;
   out_8536571033504258124[41] = 0;
   out_8536571033504258124[42] = 0;
   out_8536571033504258124[43] = 0;
   out_8536571033504258124[44] = 0;
   out_8536571033504258124[45] = 0;
   out_8536571033504258124[46] = 0;
   out_8536571033504258124[47] = 0;
   out_8536571033504258124[48] = 0;
   out_8536571033504258124[49] = 0;
   out_8536571033504258124[50] = 0;
   out_8536571033504258124[51] = 0;
   out_8536571033504258124[52] = 0;
   out_8536571033504258124[53] = 0;
   out_8536571033504258124[54] = 0;
   out_8536571033504258124[55] = 0;
   out_8536571033504258124[56] = 1;
   out_8536571033504258124[57] = 0;
   out_8536571033504258124[58] = 0;
   out_8536571033504258124[59] = 0;
   out_8536571033504258124[60] = 0;
   out_8536571033504258124[61] = 0;
   out_8536571033504258124[62] = 0;
   out_8536571033504258124[63] = 0;
   out_8536571033504258124[64] = 0;
   out_8536571033504258124[65] = 0;
}
void h_10(double *state, double *unused, double *out_8612314160902989821) {
   out_8612314160902989821[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8612314160902989821[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8612314160902989821[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3355853722688409671) {
   out_3355853722688409671[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3355853722688409671[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3355853722688409671[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3355853722688409671[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3355853722688409671[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3355853722688409671[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3355853722688409671[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3355853722688409671[7] = 0;
   out_3355853722688409671[8] = 0;
   out_3355853722688409671[9] = 0;
   out_3355853722688409671[10] = 0;
   out_3355853722688409671[11] = 0;
   out_3355853722688409671[12] = 0;
   out_3355853722688409671[13] = 0;
   out_3355853722688409671[14] = 0;
   out_3355853722688409671[15] = 0;
   out_3355853722688409671[16] = 1;
   out_3355853722688409671[17] = 0;
   out_3355853722688409671[18] = 0;
   out_3355853722688409671[19] = 1;
   out_3355853722688409671[20] = 0;
   out_3355853722688409671[21] = 0;
   out_3355853722688409671[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3355853722688409671[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3355853722688409671[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3355853722688409671[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3355853722688409671[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3355853722688409671[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3355853722688409671[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3355853722688409671[29] = 0;
   out_3355853722688409671[30] = 0;
   out_3355853722688409671[31] = 0;
   out_3355853722688409671[32] = 0;
   out_3355853722688409671[33] = 0;
   out_3355853722688409671[34] = 0;
   out_3355853722688409671[35] = 0;
   out_3355853722688409671[36] = 0;
   out_3355853722688409671[37] = 0;
   out_3355853722688409671[38] = 0;
   out_3355853722688409671[39] = 1;
   out_3355853722688409671[40] = 0;
   out_3355853722688409671[41] = 0;
   out_3355853722688409671[42] = 1;
   out_3355853722688409671[43] = 0;
   out_3355853722688409671[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3355853722688409671[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3355853722688409671[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3355853722688409671[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3355853722688409671[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3355853722688409671[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3355853722688409671[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3355853722688409671[51] = 0;
   out_3355853722688409671[52] = 0;
   out_3355853722688409671[53] = 0;
   out_3355853722688409671[54] = 0;
   out_3355853722688409671[55] = 0;
   out_3355853722688409671[56] = 0;
   out_3355853722688409671[57] = 0;
   out_3355853722688409671[58] = 0;
   out_3355853722688409671[59] = 0;
   out_3355853722688409671[60] = 0;
   out_3355853722688409671[61] = 0;
   out_3355853722688409671[62] = 1;
   out_3355853722688409671[63] = 0;
   out_3355853722688409671[64] = 0;
   out_3355853722688409671[65] = 1;
}
void h_12(double *state, double *unused, double *out_26121003024485784) {
   out_26121003024485784[0] = state[0];
   out_26121003024485784[1] = state[1];
   out_26121003024485784[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5131906278802922342) {
   out_5131906278802922342[0] = 1;
   out_5131906278802922342[1] = 0;
   out_5131906278802922342[2] = 0;
   out_5131906278802922342[3] = 0;
   out_5131906278802922342[4] = 0;
   out_5131906278802922342[5] = 0;
   out_5131906278802922342[6] = 0;
   out_5131906278802922342[7] = 0;
   out_5131906278802922342[8] = 0;
   out_5131906278802922342[9] = 0;
   out_5131906278802922342[10] = 0;
   out_5131906278802922342[11] = 0;
   out_5131906278802922342[12] = 0;
   out_5131906278802922342[13] = 0;
   out_5131906278802922342[14] = 0;
   out_5131906278802922342[15] = 0;
   out_5131906278802922342[16] = 0;
   out_5131906278802922342[17] = 0;
   out_5131906278802922342[18] = 0;
   out_5131906278802922342[19] = 0;
   out_5131906278802922342[20] = 0;
   out_5131906278802922342[21] = 0;
   out_5131906278802922342[22] = 0;
   out_5131906278802922342[23] = 1;
   out_5131906278802922342[24] = 0;
   out_5131906278802922342[25] = 0;
   out_5131906278802922342[26] = 0;
   out_5131906278802922342[27] = 0;
   out_5131906278802922342[28] = 0;
   out_5131906278802922342[29] = 0;
   out_5131906278802922342[30] = 0;
   out_5131906278802922342[31] = 0;
   out_5131906278802922342[32] = 0;
   out_5131906278802922342[33] = 0;
   out_5131906278802922342[34] = 0;
   out_5131906278802922342[35] = 0;
   out_5131906278802922342[36] = 0;
   out_5131906278802922342[37] = 0;
   out_5131906278802922342[38] = 0;
   out_5131906278802922342[39] = 0;
   out_5131906278802922342[40] = 0;
   out_5131906278802922342[41] = 0;
   out_5131906278802922342[42] = 0;
   out_5131906278802922342[43] = 0;
   out_5131906278802922342[44] = 0;
   out_5131906278802922342[45] = 0;
   out_5131906278802922342[46] = 1;
   out_5131906278802922342[47] = 0;
   out_5131906278802922342[48] = 0;
   out_5131906278802922342[49] = 0;
   out_5131906278802922342[50] = 0;
   out_5131906278802922342[51] = 0;
   out_5131906278802922342[52] = 0;
   out_5131906278802922342[53] = 0;
   out_5131906278802922342[54] = 0;
   out_5131906278802922342[55] = 0;
   out_5131906278802922342[56] = 0;
   out_5131906278802922342[57] = 0;
   out_5131906278802922342[58] = 0;
   out_5131906278802922342[59] = 0;
   out_5131906278802922342[60] = 0;
   out_5131906278802922342[61] = 0;
   out_5131906278802922342[62] = 0;
   out_5131906278802922342[63] = 0;
   out_5131906278802922342[64] = 0;
   out_5131906278802922342[65] = 0;
}
void h_35(double *state, double *unused, double *out_7340015235084908659) {
   out_7340015235084908659[0] = state[7];
   out_7340015235084908659[1] = state[8];
   out_7340015235084908659[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6784700629462276761) {
   out_6784700629462276761[0] = 0;
   out_6784700629462276761[1] = 0;
   out_6784700629462276761[2] = 0;
   out_6784700629462276761[3] = 0;
   out_6784700629462276761[4] = 0;
   out_6784700629462276761[5] = 0;
   out_6784700629462276761[6] = 0;
   out_6784700629462276761[7] = 1;
   out_6784700629462276761[8] = 0;
   out_6784700629462276761[9] = 0;
   out_6784700629462276761[10] = 0;
   out_6784700629462276761[11] = 0;
   out_6784700629462276761[12] = 0;
   out_6784700629462276761[13] = 0;
   out_6784700629462276761[14] = 0;
   out_6784700629462276761[15] = 0;
   out_6784700629462276761[16] = 0;
   out_6784700629462276761[17] = 0;
   out_6784700629462276761[18] = 0;
   out_6784700629462276761[19] = 0;
   out_6784700629462276761[20] = 0;
   out_6784700629462276761[21] = 0;
   out_6784700629462276761[22] = 0;
   out_6784700629462276761[23] = 0;
   out_6784700629462276761[24] = 0;
   out_6784700629462276761[25] = 0;
   out_6784700629462276761[26] = 0;
   out_6784700629462276761[27] = 0;
   out_6784700629462276761[28] = 0;
   out_6784700629462276761[29] = 0;
   out_6784700629462276761[30] = 1;
   out_6784700629462276761[31] = 0;
   out_6784700629462276761[32] = 0;
   out_6784700629462276761[33] = 0;
   out_6784700629462276761[34] = 0;
   out_6784700629462276761[35] = 0;
   out_6784700629462276761[36] = 0;
   out_6784700629462276761[37] = 0;
   out_6784700629462276761[38] = 0;
   out_6784700629462276761[39] = 0;
   out_6784700629462276761[40] = 0;
   out_6784700629462276761[41] = 0;
   out_6784700629462276761[42] = 0;
   out_6784700629462276761[43] = 0;
   out_6784700629462276761[44] = 0;
   out_6784700629462276761[45] = 0;
   out_6784700629462276761[46] = 0;
   out_6784700629462276761[47] = 0;
   out_6784700629462276761[48] = 0;
   out_6784700629462276761[49] = 0;
   out_6784700629462276761[50] = 0;
   out_6784700629462276761[51] = 0;
   out_6784700629462276761[52] = 0;
   out_6784700629462276761[53] = 1;
   out_6784700629462276761[54] = 0;
   out_6784700629462276761[55] = 0;
   out_6784700629462276761[56] = 0;
   out_6784700629462276761[57] = 0;
   out_6784700629462276761[58] = 0;
   out_6784700629462276761[59] = 0;
   out_6784700629462276761[60] = 0;
   out_6784700629462276761[61] = 0;
   out_6784700629462276761[62] = 0;
   out_6784700629462276761[63] = 0;
   out_6784700629462276761[64] = 0;
   out_6784700629462276761[65] = 0;
}
void h_32(double *state, double *unused, double *out_5984287855866549614) {
   out_5984287855866549614[0] = state[3];
   out_5984287855866549614[1] = state[4];
   out_5984287855866549614[2] = state[5];
   out_5984287855866549614[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1412358634451759372) {
   out_1412358634451759372[0] = 0;
   out_1412358634451759372[1] = 0;
   out_1412358634451759372[2] = 0;
   out_1412358634451759372[3] = 1;
   out_1412358634451759372[4] = 0;
   out_1412358634451759372[5] = 0;
   out_1412358634451759372[6] = 0;
   out_1412358634451759372[7] = 0;
   out_1412358634451759372[8] = 0;
   out_1412358634451759372[9] = 0;
   out_1412358634451759372[10] = 0;
   out_1412358634451759372[11] = 0;
   out_1412358634451759372[12] = 0;
   out_1412358634451759372[13] = 0;
   out_1412358634451759372[14] = 0;
   out_1412358634451759372[15] = 0;
   out_1412358634451759372[16] = 0;
   out_1412358634451759372[17] = 0;
   out_1412358634451759372[18] = 0;
   out_1412358634451759372[19] = 0;
   out_1412358634451759372[20] = 0;
   out_1412358634451759372[21] = 0;
   out_1412358634451759372[22] = 0;
   out_1412358634451759372[23] = 0;
   out_1412358634451759372[24] = 0;
   out_1412358634451759372[25] = 0;
   out_1412358634451759372[26] = 1;
   out_1412358634451759372[27] = 0;
   out_1412358634451759372[28] = 0;
   out_1412358634451759372[29] = 0;
   out_1412358634451759372[30] = 0;
   out_1412358634451759372[31] = 0;
   out_1412358634451759372[32] = 0;
   out_1412358634451759372[33] = 0;
   out_1412358634451759372[34] = 0;
   out_1412358634451759372[35] = 0;
   out_1412358634451759372[36] = 0;
   out_1412358634451759372[37] = 0;
   out_1412358634451759372[38] = 0;
   out_1412358634451759372[39] = 0;
   out_1412358634451759372[40] = 0;
   out_1412358634451759372[41] = 0;
   out_1412358634451759372[42] = 0;
   out_1412358634451759372[43] = 0;
   out_1412358634451759372[44] = 0;
   out_1412358634451759372[45] = 0;
   out_1412358634451759372[46] = 0;
   out_1412358634451759372[47] = 0;
   out_1412358634451759372[48] = 0;
   out_1412358634451759372[49] = 1;
   out_1412358634451759372[50] = 0;
   out_1412358634451759372[51] = 0;
   out_1412358634451759372[52] = 0;
   out_1412358634451759372[53] = 0;
   out_1412358634451759372[54] = 0;
   out_1412358634451759372[55] = 0;
   out_1412358634451759372[56] = 0;
   out_1412358634451759372[57] = 0;
   out_1412358634451759372[58] = 0;
   out_1412358634451759372[59] = 0;
   out_1412358634451759372[60] = 0;
   out_1412358634451759372[61] = 0;
   out_1412358634451759372[62] = 0;
   out_1412358634451759372[63] = 0;
   out_1412358634451759372[64] = 0;
   out_1412358634451759372[65] = 0;
   out_1412358634451759372[66] = 0;
   out_1412358634451759372[67] = 0;
   out_1412358634451759372[68] = 0;
   out_1412358634451759372[69] = 0;
   out_1412358634451759372[70] = 0;
   out_1412358634451759372[71] = 0;
   out_1412358634451759372[72] = 1;
   out_1412358634451759372[73] = 0;
   out_1412358634451759372[74] = 0;
   out_1412358634451759372[75] = 0;
   out_1412358634451759372[76] = 0;
   out_1412358634451759372[77] = 0;
   out_1412358634451759372[78] = 0;
   out_1412358634451759372[79] = 0;
   out_1412358634451759372[80] = 0;
   out_1412358634451759372[81] = 0;
   out_1412358634451759372[82] = 0;
   out_1412358634451759372[83] = 0;
   out_1412358634451759372[84] = 0;
   out_1412358634451759372[85] = 0;
   out_1412358634451759372[86] = 0;
   out_1412358634451759372[87] = 0;
}
void h_13(double *state, double *unused, double *out_6962572396957821065) {
   out_6962572396957821065[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6962572396957821065[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6962572396957821065[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7032493081481147012) {
   out_7032493081481147012[0] = 0;
   out_7032493081481147012[1] = 0;
   out_7032493081481147012[2] = 0;
   out_7032493081481147012[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7032493081481147012[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7032493081481147012[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7032493081481147012[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7032493081481147012[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7032493081481147012[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7032493081481147012[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7032493081481147012[10] = 0;
   out_7032493081481147012[11] = 0;
   out_7032493081481147012[12] = 0;
   out_7032493081481147012[13] = 0;
   out_7032493081481147012[14] = 0;
   out_7032493081481147012[15] = 0;
   out_7032493081481147012[16] = 0;
   out_7032493081481147012[17] = 0;
   out_7032493081481147012[18] = 0;
   out_7032493081481147012[19] = 0;
   out_7032493081481147012[20] = 0;
   out_7032493081481147012[21] = 0;
   out_7032493081481147012[22] = 0;
   out_7032493081481147012[23] = 0;
   out_7032493081481147012[24] = 0;
   out_7032493081481147012[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7032493081481147012[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7032493081481147012[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7032493081481147012[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7032493081481147012[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7032493081481147012[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7032493081481147012[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7032493081481147012[32] = 0;
   out_7032493081481147012[33] = 0;
   out_7032493081481147012[34] = 0;
   out_7032493081481147012[35] = 0;
   out_7032493081481147012[36] = 0;
   out_7032493081481147012[37] = 0;
   out_7032493081481147012[38] = 0;
   out_7032493081481147012[39] = 0;
   out_7032493081481147012[40] = 0;
   out_7032493081481147012[41] = 0;
   out_7032493081481147012[42] = 0;
   out_7032493081481147012[43] = 0;
   out_7032493081481147012[44] = 0;
   out_7032493081481147012[45] = 0;
   out_7032493081481147012[46] = 0;
   out_7032493081481147012[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7032493081481147012[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7032493081481147012[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7032493081481147012[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7032493081481147012[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7032493081481147012[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7032493081481147012[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7032493081481147012[54] = 0;
   out_7032493081481147012[55] = 0;
   out_7032493081481147012[56] = 0;
   out_7032493081481147012[57] = 0;
   out_7032493081481147012[58] = 0;
   out_7032493081481147012[59] = 0;
   out_7032493081481147012[60] = 0;
   out_7032493081481147012[61] = 0;
   out_7032493081481147012[62] = 0;
   out_7032493081481147012[63] = 0;
   out_7032493081481147012[64] = 0;
   out_7032493081481147012[65] = 0;
}
void h_14(double *state, double *unused, double *out_740781242842422661) {
   out_740781242842422661[0] = state[10];
   out_740781242842422661[1] = state[11];
   out_740781242842422661[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8536571033504258124) {
   out_8536571033504258124[0] = 0;
   out_8536571033504258124[1] = 0;
   out_8536571033504258124[2] = 0;
   out_8536571033504258124[3] = 0;
   out_8536571033504258124[4] = 0;
   out_8536571033504258124[5] = 0;
   out_8536571033504258124[6] = 0;
   out_8536571033504258124[7] = 0;
   out_8536571033504258124[8] = 0;
   out_8536571033504258124[9] = 0;
   out_8536571033504258124[10] = 1;
   out_8536571033504258124[11] = 0;
   out_8536571033504258124[12] = 0;
   out_8536571033504258124[13] = 0;
   out_8536571033504258124[14] = 0;
   out_8536571033504258124[15] = 0;
   out_8536571033504258124[16] = 0;
   out_8536571033504258124[17] = 0;
   out_8536571033504258124[18] = 0;
   out_8536571033504258124[19] = 0;
   out_8536571033504258124[20] = 0;
   out_8536571033504258124[21] = 0;
   out_8536571033504258124[22] = 0;
   out_8536571033504258124[23] = 0;
   out_8536571033504258124[24] = 0;
   out_8536571033504258124[25] = 0;
   out_8536571033504258124[26] = 0;
   out_8536571033504258124[27] = 0;
   out_8536571033504258124[28] = 0;
   out_8536571033504258124[29] = 0;
   out_8536571033504258124[30] = 0;
   out_8536571033504258124[31] = 0;
   out_8536571033504258124[32] = 0;
   out_8536571033504258124[33] = 1;
   out_8536571033504258124[34] = 0;
   out_8536571033504258124[35] = 0;
   out_8536571033504258124[36] = 0;
   out_8536571033504258124[37] = 0;
   out_8536571033504258124[38] = 0;
   out_8536571033504258124[39] = 0;
   out_8536571033504258124[40] = 0;
   out_8536571033504258124[41] = 0;
   out_8536571033504258124[42] = 0;
   out_8536571033504258124[43] = 0;
   out_8536571033504258124[44] = 0;
   out_8536571033504258124[45] = 0;
   out_8536571033504258124[46] = 0;
   out_8536571033504258124[47] = 0;
   out_8536571033504258124[48] = 0;
   out_8536571033504258124[49] = 0;
   out_8536571033504258124[50] = 0;
   out_8536571033504258124[51] = 0;
   out_8536571033504258124[52] = 0;
   out_8536571033504258124[53] = 0;
   out_8536571033504258124[54] = 0;
   out_8536571033504258124[55] = 0;
   out_8536571033504258124[56] = 1;
   out_8536571033504258124[57] = 0;
   out_8536571033504258124[58] = 0;
   out_8536571033504258124[59] = 0;
   out_8536571033504258124[60] = 0;
   out_8536571033504258124[61] = 0;
   out_8536571033504258124[62] = 0;
   out_8536571033504258124[63] = 0;
   out_8536571033504258124[64] = 0;
   out_8536571033504258124[65] = 0;
}
void h_33(double *state, double *unused, double *out_8834599005332042657) {
   out_8834599005332042657[0] = state[16];
   out_8834599005332042657[1] = state[17];
   out_8834599005332042657[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3634143624823419157) {
   out_3634143624823419157[0] = 0;
   out_3634143624823419157[1] = 0;
   out_3634143624823419157[2] = 0;
   out_3634143624823419157[3] = 0;
   out_3634143624823419157[4] = 0;
   out_3634143624823419157[5] = 0;
   out_3634143624823419157[6] = 0;
   out_3634143624823419157[7] = 0;
   out_3634143624823419157[8] = 0;
   out_3634143624823419157[9] = 0;
   out_3634143624823419157[10] = 0;
   out_3634143624823419157[11] = 0;
   out_3634143624823419157[12] = 0;
   out_3634143624823419157[13] = 0;
   out_3634143624823419157[14] = 0;
   out_3634143624823419157[15] = 0;
   out_3634143624823419157[16] = 1;
   out_3634143624823419157[17] = 0;
   out_3634143624823419157[18] = 0;
   out_3634143624823419157[19] = 0;
   out_3634143624823419157[20] = 0;
   out_3634143624823419157[21] = 0;
   out_3634143624823419157[22] = 0;
   out_3634143624823419157[23] = 0;
   out_3634143624823419157[24] = 0;
   out_3634143624823419157[25] = 0;
   out_3634143624823419157[26] = 0;
   out_3634143624823419157[27] = 0;
   out_3634143624823419157[28] = 0;
   out_3634143624823419157[29] = 0;
   out_3634143624823419157[30] = 0;
   out_3634143624823419157[31] = 0;
   out_3634143624823419157[32] = 0;
   out_3634143624823419157[33] = 0;
   out_3634143624823419157[34] = 0;
   out_3634143624823419157[35] = 0;
   out_3634143624823419157[36] = 0;
   out_3634143624823419157[37] = 0;
   out_3634143624823419157[38] = 0;
   out_3634143624823419157[39] = 1;
   out_3634143624823419157[40] = 0;
   out_3634143624823419157[41] = 0;
   out_3634143624823419157[42] = 0;
   out_3634143624823419157[43] = 0;
   out_3634143624823419157[44] = 0;
   out_3634143624823419157[45] = 0;
   out_3634143624823419157[46] = 0;
   out_3634143624823419157[47] = 0;
   out_3634143624823419157[48] = 0;
   out_3634143624823419157[49] = 0;
   out_3634143624823419157[50] = 0;
   out_3634143624823419157[51] = 0;
   out_3634143624823419157[52] = 0;
   out_3634143624823419157[53] = 0;
   out_3634143624823419157[54] = 0;
   out_3634143624823419157[55] = 0;
   out_3634143624823419157[56] = 0;
   out_3634143624823419157[57] = 0;
   out_3634143624823419157[58] = 0;
   out_3634143624823419157[59] = 0;
   out_3634143624823419157[60] = 0;
   out_3634143624823419157[61] = 0;
   out_3634143624823419157[62] = 1;
   out_3634143624823419157[63] = 0;
   out_3634143624823419157[64] = 0;
   out_3634143624823419157[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3808281942058314825) {
  H(in_vec, out_3808281942058314825);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8984552048392289771) {
  err_fun(nom_x, delta_x, out_8984552048392289771);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5876474152572794163) {
  inv_err_fun(nom_x, true_x, out_5876474152572794163);
}
void live_H_mod_fun(double *state, double *out_6523588885555635776) {
  H_mod_fun(state, out_6523588885555635776);
}
void live_f_fun(double *state, double dt, double *out_4217369493126296336) {
  f_fun(state,  dt, out_4217369493126296336);
}
void live_F_fun(double *state, double dt, double *out_9146061074980949392) {
  F_fun(state,  dt, out_9146061074980949392);
}
void live_h_4(double *state, double *unused, double *out_1136797301434087438) {
  h_4(state, unused, out_1136797301434087438);
}
void live_H_4(double *state, double *unused, double *out_8295381386874667479) {
  H_4(state, unused, out_8295381386874667479);
}
void live_h_9(double *state, double *unused, double *out_740781242842422661) {
  h_9(state, unused, out_740781242842422661);
}
void live_H_9(double *state, double *unused, double *out_8536571033504258124) {
  H_9(state, unused, out_8536571033504258124);
}
void live_h_10(double *state, double *unused, double *out_8612314160902989821) {
  h_10(state, unused, out_8612314160902989821);
}
void live_H_10(double *state, double *unused, double *out_3355853722688409671) {
  H_10(state, unused, out_3355853722688409671);
}
void live_h_12(double *state, double *unused, double *out_26121003024485784) {
  h_12(state, unused, out_26121003024485784);
}
void live_H_12(double *state, double *unused, double *out_5131906278802922342) {
  H_12(state, unused, out_5131906278802922342);
}
void live_h_35(double *state, double *unused, double *out_7340015235084908659) {
  h_35(state, unused, out_7340015235084908659);
}
void live_H_35(double *state, double *unused, double *out_6784700629462276761) {
  H_35(state, unused, out_6784700629462276761);
}
void live_h_32(double *state, double *unused, double *out_5984287855866549614) {
  h_32(state, unused, out_5984287855866549614);
}
void live_H_32(double *state, double *unused, double *out_1412358634451759372) {
  H_32(state, unused, out_1412358634451759372);
}
void live_h_13(double *state, double *unused, double *out_6962572396957821065) {
  h_13(state, unused, out_6962572396957821065);
}
void live_H_13(double *state, double *unused, double *out_7032493081481147012) {
  H_13(state, unused, out_7032493081481147012);
}
void live_h_14(double *state, double *unused, double *out_740781242842422661) {
  h_14(state, unused, out_740781242842422661);
}
void live_H_14(double *state, double *unused, double *out_8536571033504258124) {
  H_14(state, unused, out_8536571033504258124);
}
void live_h_33(double *state, double *unused, double *out_8834599005332042657) {
  h_33(state, unused, out_8834599005332042657);
}
void live_H_33(double *state, double *unused, double *out_3634143624823419157) {
  H_33(state, unused, out_3634143624823419157);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
